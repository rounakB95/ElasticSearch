<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:RestService" id="b02d5ce1-2c53-4604-814c-645a288c8e08" name="CRTService API" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="C:\Users\rbandyopadhyay\Documents\yml\v1.yml" basePath="/CRTService/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:description>RESTful CRTService API</con:description>
  <con:settings>
    <con:setting id="b02d5ce1-2c53-4604-814c-645a288c8e08fileName">CRTService-API</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="file:/C:/Users/rbandyopadhyay/Documents/yml/v1.yml">
    <con:part>
      <con:url>file:/C:/Users/rbandyopadhyay/Documents/yml/v1.yml</con:url>
      <con:content>swagger: '2.0'
info:
  title: CRTService API
  description: RESTful CRTService API
  version: '1'
host: localhost
schemes:
  - http
  - https
basePath: /CRTService/v1
produces:
  - application/json
paths:
  '/customers/search':
    get:
      summary: Search customer(s)
      operationId: SearchCustomers
      parameters:
        - name: maxRows
          in: query
          required: true
          type: integer
          format: int32
        - name: CustId
          in: query
          type: integer
          format: int32
        - name: MeterNo
          in: query
          type: integer
          format: int32
        - name: UserId
          in: query
          type: integer
          format: int64
        - name: StoreId
          in: query
          type: string
        - name: UserName
          in: query
          type: string
        - name: CompanyName
          in: query
          type: string
        - name: FirstName
          in: query
          type: string
        - name: LastName
          in: query
          type: string
        - name: EmailAddress
          in: query
          type: string
        - name: PhoneNumber
          in: query
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/SearchCustomersResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/loadProfile':
    get:
      summary: Load customer profile
      operationId: LoadProfile
      parameters:
        - name: custID
          in: query
          required: true
          type: integer
          format: int32
        - name: userID
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/LoadCustomerProfileResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/updateAccountComments':
    post:
      summary: Update comments by CSR user to customer account
      operationId: UpdateAccountComments
      parameters:
        - name: custID
          in: query
          required: true
          type: integer
          format: int32
        - name: comments
          in: query
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ResubmitOrderForm':
    post:
      summary: Resubmit order forms that are still in resubmit state for customer
      operationId: ResubmitOrderForm
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            type: boolean
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/creditCardInfoAndRefundHistory':
    get:
      summary: Get info about credit card refund for the customer
      operationId: GetCreditCardRefund
      parameters:
        - name: custID
          in: query
          required: true
          type: integer
          format: int32
        - name: profileId
          in: query
          required: true
          type: string
        - name: maxInstantCreditSummary
          in: query
          type: integer
          format: int32
        - name: userId
          in: query
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CreditCardInfoAndRefundHistory'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/refundCreditCard':
    post:
      parameters:
        - name: custID
          in: query
          required: true
          type: integer
          format: int32
        - name: amount
          required: true
          in: query
          type: integer
          format: int64
        - name: reason
          required: true
          in: query
          type: integer
          format: int32
        - name: comments
          required: true
          in: query
          type: string
        - name: username
          required: true
          in: query
          type: string
        - name: revenueType
          required: true
          in: query
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/CreditAccount':
    get:
      summary: Get Credit Account Information
      operationId: GetCreditAccountInfo
      parameters:
        - name: IsSasDmc
          in: query
          required: true
          type: boolean
        - name: isOmas
          in: query
          required: true
          type: boolean
        - name: meterNumber
          in: query
          type: number
          format: decimal
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CreditAccountInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Credit to customer account
      operationId: CreditAccount
      parameters:
        - name: accountCreditRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountCreditRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DebitAccount':
    post:
      summary: Debit to customer account
      operationId: DebitAccount
      parameters:
        - name: accountDebitRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountDebitRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/AdjustServiceFee':
    post:
      summary: Adjust service fee to customer account
      operationId: AdjustServiceFee
      parameters:
        - name: serviceFeeAdjustmentRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceFeeAdjustmentRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/featureSettings':
    get:
      summary: Get features for the customer
      operationId: GetFeatureSettings
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/FeatureSettings'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set features for the customer
      operationId: SetFeatureSettings
      parameters:
        - name: featureSettings
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetFeatureSettings'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/dynamicFeatureSettings':
    get:
      summary: Get Dynamic Feature Settings for the customer
      operationId: GetDynamicFeatureSettings
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/DynamicFeatureSettings'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set Dynamic Feature Settings for the customer
      operationId: SetDynamicFeatureSettings
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: dynamicFeature
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetDynamicFeatureSettings'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/GpFacilities':
    get:
      summary: Get GP Facilities
      operationId: GetGpFacilities
      responses:
        '200':
          description: Get GP Facilities
          schema:
            $ref: '#/definitions/GpFacilitiesResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/gpFacilityOverride':
    get:
      summary: Get GP Facility Override
      operationId: GetGpFacilityOverride
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Get GP Facility Override
          schema:
            type: integer
            format: int32
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/gpFacilityOverride/{consolidatorFacilityAddressId}':
    post:
      summary: Set GP Facility Override
      operationId: SetGpFacilityOverride
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: consolidatorFacilityAddressId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Set GP Facility Override
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/getCurrentPlanInfo':
    get:
      summary: Get features for the customer
      operationId: GetCurrentPlanInfo
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CurrentPlanInfoResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/waiveServiceFee':
    post:
      summary: Waive service fee for customer
      operationId: WaiveServiceFee
      parameters:
        - name: serviceFeeWaiveRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceFeeWaiveRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/purchaseTransactionHistory':
    get:
      summary: Get purchase transaction history
      operationId: GetPurchaseTransactionHistory
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: transactionTypeBitwise
          description: 'Postage: 1, Credit: 2, ServiceFee: 4, Refund: 8'
          in: query
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: true
          type: string
          format: DateTime
        - name: endDate
          in: query
          required: true
          type: string
          format: DateTime
        - name: meterNumber
          in: query
          type: number
          format: decimal
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/PurchaseTransactionHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/RefundHistory':
    get:
      summary: Get refund history
      operationId: GetRefundHistory
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: true
          type: string
          format: date-time
        - name: endDate
          in: query
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: Get refund history
          schema:
            type: array
            items:
              $ref: '#/definitions/RefundHistory'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/EmailPreference':
    get:
      summary: Get Email Preference
      operationId: GetEmailPreference
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Get Email Preference
          schema:
            type: boolean
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set Email Preference
      operationId: SetEmailPreference
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: alwaysSendStatement
          in: query
          required: true
          type: boolean
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/AchCredit':
    post:
      summary: Ach Credit
      operationId: AchCredit
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: amount
          in: query
          required: true
          type: number
          format: decimal
        - name: comment
          in: query
          required: true
          type: string
        - name: csrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/InsuranceHistory':
    get:
      summary: Get Insurance History
      operationId: GetInsuranceHistory
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: true
          type: string
          format: date-time
        - name: endDate
          in: query
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/InsuranceHistoryInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/CancelInsurance':
    post:
      summary: Cancel Insurance
      operationId: CancelInsurance
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelInsuranceRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/EmailHistory/{custId}':
    get:
      summary: Get Email History
      operationId: GetEmailHistory
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: true
          type: string
          format: date-time
        - name: endDate
          in: query
          required: true
          type: string
          format: date-time
        - name: page
          in: query
          type: number
          format: integer
        - name: pageSize
          in: query
          type: number
          format: integer
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/EmailHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/EmailHistoryDetail/{messageId}/{isSilverPop}':
    get:
      summary: Get Email History Detail
      operationId: GetEmailHistoryDetail
      parameters:
        - name: messageId
          in: path
          required: true
          type: integer
          format: int64
        - name: isSilverPop
          in: path
          required: true
          type: boolean
        - name: IsLegacyEmail
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/MessageDetailResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ResendEmails':
    post:
      summary: Resend Emails
      operationId: ResendEmails
      parameters:
        - name: msgList
          in: body
          required: true
          description: Resend Email For Messages
          schema:
            type: array
            items:
              $ref: '#/definitions/ResendMessageItem'
        - name: forwardEmail
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/pricingPlan':
    get:
      summary: Get Pricing Plan Information
      operationId: GetPricingPlanInfo
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: accessLevel
          in: query
          required: true
          type: string
          enum: ['Cs', 'Csm', 'Pam']
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/PricingPlanInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Change Pricing Plan
      operationId: ChangePricingPlan
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
        - name: username
          in: query
          required: true
          type: string
        - name: planId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/closeAccount':
    get:
      summary: Get Close Account Information
      operationId: GetCloseAccountInfo
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CloseAccountInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Close Account
      operationId: CloseAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/CloseAccountRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/SecurityQuestions/{username}':
    get:
      summary: Get Security Questions for a username
      operationId: GetUserSecurityQuestions
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/GetSecurityQuestionsResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/UserSecurityQuestions':
    post:
      summary: Get Security Questions for a username
      operationId: UserSecurityQuestions
      parameters:
        - name: username
          in: body
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/GetSecurityQuestionsResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/SecurityQuestions':
    get:
      summary: Get list of avaialble security questions
      operationId: GetSecurityQuestions
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/IdDescription'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/resetPasswordWithSecurityQuestions':
    post:
      summary: Reset Password With Security Questions
      operationId: ResetPasswordWithSecurityQuestions
      parameters:
        - name: username
          in: query
          required: true
          type: string
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
        - name: answer1
          in: query
          required: true
          type: string
        - name: answer2
          in: query
          type: string
        - name: csrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
             type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/resetPassword':
    post:
      summary: Reset Password
      operationId: ResetPassword
      parameters:
        - name: csrName
          in: query
          required: true
          type: string
        - name: username
          in: query
          required: false
          type: string
        - name: userId
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/updatePassword':
    post:
      summary: Update Password
      operationId: UpdatePassword
      parameters:
        - name: username
          in: query
          required: true
          type: string
        - name: password
          in: query
          required: true
          type: string
        - name: csrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/resetSecurityQuestions':
    post:
      summary: Reset Security Questions
      operationId: ResetSecurityQuestions
      parameters:
        - name: username
          in: query
          required: true
          type: string
        - name: questionType1
          in: query
          required: true
          type: integer
          format: int32
          description: 'Unknown = 0, MothersMaidenName = 1, PetsName = 2, Last4SocialSecurityNumber = 5, Last4DriversLicense = 8, BirthCity = 9, HighSchoolMascot = 12, FathersBirthplace = 13, StreetName = 14, FirstSchoolsName = 15, FirstCarsMakeModel = 16'
        - name: answer1
          in: query
          required: true
          type: string
        - name: questionType2
          in: query
          required: true
          type: integer
          format: int32
          description: 'Unknown = 0, MothersMaidenName = 1, PetsName = 2, Last4SocialSecurityNumber = 5, Last4DriversLicense = 8, BirthCity = 9, HighSchoolMascot = 12, FathersBirthplace = 13, StreetName = 14, FirstSchoolsName = 15, FirstCarsMakeModel = 16'
        - name: answer2
          in: query
          required: true
          type: string
        - name: csrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/GetServiceFeeAdjustmentReason':
    get:
      summary: Get Service Fee Adjustment Reason
      operationId: GetServiceFeeAdjustmentReasonCatalog
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/IdDescription'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/getMonthlyBalanceLimit':
    get:
      summary: Get monthly balance limit for a customer
      operationId: GetMonthlyBalanceLimit
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            type: number
            format: decimal
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/setMonthlyBalanceLimit':
    post:
      summary: Set monthly balance limit for a customer
      operationId: SetMonthlyBalanceLimit
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: monthlyLimit
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/convertToSas':
    post:
      summary: Convert To Sas
      operationId: ConvertToSas
      parameters:
        - name: profileId
          in: query
          required: true
          type: string
        - name: promoCode
          in: query
          required: true
          type: string
        - name: integrationId
          in: query
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success request
          schema:
            type: integer
            format: int64
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/MachineUniqueData/{custId}':
    get:
      summary: Get Machine Unique Data
      operationId: GetMachineUniqueData
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/MachineUniqueDataInformation'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/{storeId}':
    get:
      operationId: GetShipWorksInfo
      parameters:
        - in: path
          name: storeId
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/ShipWorksInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/BillingHistory/{recurlyAccountCode}':
    get:
      operationId: GetShipWorksBillingHistory
      parameters:
        - in: path
          name: recurlyAccountCode
          required: true
          type: string
        - in: query
          name: pageSize
          required: true
          type: integer
          format: int32
        - in: query
          name: cursor
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/ShipWorksBillingHistory'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/AccountInfo/{custId}':
    put:
      operationId: UpdateShipWorksAccount
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/ShipWorksContactInfo'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/Account/{custId}':
    delete:
      operationId: CloseShipWorksAccount
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: query
          name: reasonId
          required: true
          type: integer
          format: int16
        - in: query
          name: csrName
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/AccountSubscription/{custId}':
    post:
      operationId: ReactivateShipWorksSubscription
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: query
          name: reasonId
          required: true
          type: integer
          format: int16
        - in: query
          name: csrName
          required: true
          type: string
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/ShipWorksBillingInfo'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: CancelShipWorksSubscription
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: query
          name: reasonId
          required: true
          type: integer
          format: int16
        - in: query
          name: csrName
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/ShipWorks/BillingPlan/{username}':
    post:
      operationId: UpdateBillingPlan
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/UpdateBillingPlanRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/MailerIds':
    get:
      operationId: GetMailerIds
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/MailerIdInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: SetMailerIds
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: body
          name: mailerId
          required: true
          schema:
            $ref: '#/definitions/MailerIdInfo'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/RateSets/{custId}':
    get:
      operationId: GetRateSets
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/RateSetsResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: SetRateSets
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/RateSetsRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/serviceFeeTaxHistory':
    get:
      summary: Get Service Fee Tax History
      operationId: GetServiceFeeTaxHistory
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: false
          type: string
          format: DateTime
        - name: endDate
          in: query
          required: false
          type: string
          format: DateTime
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/ServiceFeeTaxHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/balanceHistory':
    post:
      summary: Get Balance History
      operationId: GetBalanceHistory
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: balanceHistoryRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/BalanceHistoryRequest'
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/BalanceHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/balanceHistoryByToken':
    post:
      summary: Get Balance History By Token
      operationId: GetBalanceHistoryByToken
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: balanceHistoryByTokenRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/BalanceHistoryByTokenRequest'
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/BalanceHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/adjustmentHistory':
    get:
      summary: Get Adjustment History
      operationId: GetAdjustmentHistory
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: startDate
          in: query
          required: false
          type: string
          format: DateTime
        - name: endDate
          in: query
          required: false
          type: string
          format: DateTime
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/AdjustmentHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/EpsAccount':
    get:
      summary: Get EPS Account
      operationId: GetEpsAccount
      parameters:
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set EPS Account
      operationId: SetEpsAccount
      parameters:
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
        - name: epsAccountNumber
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/LinkEpsAccount':
    post:
      summary: Link EPS Account
      operationId: LinkEpsAccount
      parameters:
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
        - name: epsAuthorizationCode
          in: query
          required: true
          type: string
        - name: merchantName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkAdjustServiceFee':
    post:
      summary: Adjust service fee to customer account(Bulk Actions)
      operationId: BulkAdjustServiceFee
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkAdjustServiceFeeRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkChangePlan':
    post:
      summary: Change Pricing Plan(Bulk Actions)
      operationId: BulkChangePlan
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkChangePlanRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkWaiveServiceFee':
    post:
      summary: Waive service fee for customer(Bulk Actions)
      operationId: BulkWaiveServiceFee
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkWaiveServiceFeeRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkCreditAccount':
    post:
      summary: Credit amount to customer account(Bulk Actions)
      operationId: BulkCreditAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkAccountCreditRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkAddCarrierAccount':
    post:
      summary: Add Carrier Account(Bulk Actions)
      operationId: BulkAddCarrierAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkAddCarrierAccountRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/labelFeeBillingDetails':
    get:
      summary: Get Label Fee Billing Details
      operationId: GetLabelFeeBillingDetails
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/LabelFeeBillingDetailsResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set Label Fee Billing Details
      operationId: SetLabelFeeBillingDetails
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - name: labelFeeRateId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/SearchInvoicingPaymentId':
    get:
      summary: Search Invoicing PaymentId
      operationId: SearchInvoicingPaymentId
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/SearchInvoicingResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/InsertInvoicingPaymentId':
    post:
      summary: Insert Invoicing PaymentId
      operationId: InsertInvoicingPaymentId
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: paymentAccountId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DeleteInvoicingPaymentId':
    post:
      summary: Delete Invoicing PaymentId
      operationId: DeleteInvoicingPaymentId
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: paymentAccountId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/labelFeeRateSets':
    get:
      summary: Get Label Fee Rate Sets
      operationId: GetLabelFeeRateSets
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/LabelFeeRateSetsResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/labelFeeRateSetDetails/{rateSetId}':
    get:
      summary: Get Label Fee Rate Set Details
      operationId: GetLabelFeeRateSetDetails
      parameters:
        - name: rateSetId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/LabelFeeRateSetDetailsResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkDebitAccount':
    post:
      summary: Debit amount from customer account(Bulk Actions)
      operationId: BulkDebitAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkAccountDebitRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/BulkCloseAccount':
    post:
      summary: Closes customer account(Bulk Actions)
      operationId: BulkCloseAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkCloseAccountRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DutiesAndTaxesPaymentTypes':
    get:
      summary: Get duties and taxes payment types
      operationId: GetDutiesAndTaxesPaymentTypes
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/DutiesAndTaxesPaymentTypes'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DutiesAndTaxesAdjustmentSettings':
    get:
      summary: Get customer duties and taxes adjustment settings
      operationId: GetDutiesAndTaxesAdjustmentSettings
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Get customer duties and taxes adjustment settings
          schema:
            $ref: '#/definitions/DutiesAndTaxesAdjustmentSettings'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DutiesAndTaxesPaymentType':
    post:
      summary: Set customer duties and taxes payment type
      operationId: SetDutiesAndTaxesPaymentType
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: paymentType
          in: query
          required: true
          type: integer
          format: byte
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/DutiesAndTaxesProcessingFee':
    post:
      summary: Set customer duties and taxes processing fee
      operationId: SetDutiesAndTaxesProcessingFee
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: processingFee
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/{userId}/GetPaymentAccounts':
    get:
      operationId: GetPaymentAccounts
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - type: integer
          name: userId
          in: path
          required: true
          format: int32
      responses:
        '200':
          description: Get Payment Accounts successful.
          schema:
            $ref: '#/definitions/PaymentAccountResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/{userId}/AssociatePaymentAccountForChargeCategory':
    post:
      operationId: AssociatePaymentAccountForChargeCategory
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - type: integer
          name: userId
          in: path
          required: true
          format: int32
        - name: pAFCC
          in: body
          description: Payment Account For Charge Category
          schema:
            $ref: '#/definitions/PaymentAccountForChargeCategory'
          required: true
      responses:
        '200':
          description: Associate Payment Account For Charge Category successful.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/{userId}/UpdatePaymentAccountNickName/{paymentAccountId}/{nickName}':
    post:
      operationId: UpdatePaymentAccountNickName
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - type: integer
          name: userId
          in: path
          required: true
          format: int32
        - name: paymentAccountId
          in: path
          required: true
          type: number
          format: long
        - name: nickName
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Update Payment Account NickName successful.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/{userId}/DeletePaymentAccount/{paymentAccountId}':
    post:
      operationId: DeletePaymentAccount
      parameters:
        - name: custId
          in: path
          required: true
          type: integer
          format: int32
        - type: integer
          name: userId
          in: path
          required: true
          format: int32
        - name: paymentAccountId
          in: path
          required: true
          type: number
          format: long
      responses:
        '200':
          description: Delete Payment Account successful.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/CreatePaymentAccount':
    post:
      operationId: CreatePaymentAccount
      parameters:
        - name: Par
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentAccountRequest'
          x-nullable: false
      responses:
        '200':
          description: Create Payment Account successful.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/UpdatePaymentAccount':
    post:
      operationId: UpdatePaymentAccount
      parameters:
        - name: Par
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentAccountRequest'
          x-nullable: false
      responses:
        '200':
          description: Update Payment Account successful.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/{custId}/CustomerInvoice/{userId}':
    get:
      operationId: GetCustomerInvoice
      parameters:
        - in: path
          name: custId
          required: true
          type: integer
          format: int32
        - in: path
          name: userId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CustomerInvoiceSetting'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/CustomerInvoice':
    post:
      operationId: SetCustomerInvoice
      parameters:
        - in: body
          name: customerInvoiceSetting
          required: true
          schema:
            $ref: '#/definitions/CustomerInvoiceSetting'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/MaxImageCount':
    get:
      summary: Get Customer MaxImageCount
      operationId: GetCustomerMaxImageCount
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Get Customer MaxImageCount
          schema:
            type: integer
            format: int32
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Update Customer MaxImageCount
      operationId: UpdateCustomerMaxImageCount
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: maxImageCount
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/GetAccountStatusHistory':
    get:
      summary: Get history of account status
      operationId: GetAccountStatusHistory
      parameters:
        - name: userId
          in: query
          required: true
          type: integer
          format: int32
        - name: meterNo
          in: query
          required: true
          type: number
          format: decimal
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/AccountStatusHistoryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/ContactInfo':
    get:
      summary: Get Contact Information
      operationId: GetContactInfo
      parameters:
        - name: userId
          in: query
          required: true
          type: number
          format: int32
        - name: custId
          in: query
          required: true
          type: number
          format: int
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CustomerContactInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error

    post:
      summary: Set Contact Information
      operationId: SetContactInfo
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetCustomerContactInfoRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/BalanceAndPurchaseLimit':
    get:
      summary: Get Balance And Purchase Limit Information
      operationId: GetBalanceAndPurchaseLimitInfo
      parameters:
        - name: isSasDmc
          in: query
          required: true
          type: boolean
        - name: meterNumber
          in: query
          type: number
          format: decimal
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Balance Limit Information
          schema:
            $ref: '#/definitions/BalanceAndPurchaseLimitInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set Balance And Purchase Limit
      operationId: SetBalanceAndPurchaseLimitInfo
      parameters:
        - name: request
          in: body
          schema:
            $ref: '#/definitions/SetBalanceLimitRequest'
          required: true
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/AccountOnHoldStatus':
    get:
      summary: Get Account On Hold Status
      operationId: GetAccountOnHoldStatus
      parameters:
        - name: userId
          in: query
          required: true
          type: integer
          format: int32
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
        - name: resellerAccountId
          in: query
          type: integer
          format: int64
      responses:
        '200':
          description: Get Account On Hold Status
          schema:
            $ref: '#/definitions/AccountOnHoldStatusResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Set Account On Hold Status
      operationId: SetAccountOnHoldStatus
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountOnHoldStatusRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/Resellers/{meterNumber}':
    get:
      summary: Get Sas Meter Info
      operationId: GetSasMeterInfo
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: int32
      responses:
        '200':
          description: Get Sas Meter Info
          schema:
            $ref: '#/definitions/SasMeterResult'
        '404':
          description: Meter Not Found
        default:
          description: unexpected error
    put:
      summary: Toggle Sas Meter Status between Enabled/Disabled
      operationId: UpdateSasMeterStatus
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: int32
      responses:
        '200':
          description: Toggle Sas Meter Status between Enabled/Disabled
          schema:
            type: string
        '404':
          description: Meter Not Found
        default:
          description: unexpected error
  '/meters/Resellers/{postagePurchaseAmount}/{meterNumber}':
    post:
      summary: Sas Meter Purchase Postage
      operationId: SasPurchasePostage
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: int32
        - name: postagePurchaseAmount
          in: path
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Sas Meter Purchase Postage Response
          schema:
            $ref: '#/definitions/SasPurchasePostageResult'
        '400':
          description: Bad request
          schema:
            type: string
        default:
          description: unexpected error
  '/meters/{meterNumber}/PromoPostCardHistory':
    get:
      summary: Get Promo PostCard History
      operationId: GetPromoPostCardHistory
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: int32
      responses:
        '200':
          description: Promo PostCard History Result
          schema:
            $ref: '#/definitions/PromoPostCardHistoryResult'
        '400':
          description: Bad request
          schema:
            type: string
        default:
          description: unexpected error
  '/meters/{meterNumber}/OmasPaymentSettings':
    get:
      summary: Get Omas Payment Settings
      operationId: GetOmasPaymentSettings
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Omas Payment Settings
          schema:
            $ref: '#/definitions/OmasPaymentSettings'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Update Omas Payment Settings
      operationId: UpdateOmasPaymentSettings
      parameters:
        - name: meterNumber
          in: path
          required: true
          type: number
          format: decimal
        - name: omasPaymentSettings
          in: body
          required: true
          schema:
            $ref: '#/definitions/OmasPaymentSettings'
      responses:
        '200':
          description: Update successful
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/BulkHoldActivateAccount':
    post:
      summary: Hold or Activate account(Bulk Actions)
      operationId: BulkHoldActivateAccount
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkAccountHoldRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/meters/BulkUpdateAutoBuySettings':
    post:
      summary: Update Autobuy Settings(Bulk Actions)
      operationId: BulkUpdateAutoBuySettings
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkUpdateAutoBuyRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/giftCodes/expire':
    delete:
      summary: Expire Gift Codes
      operationId: ExpireGiftCodes
      parameters:
        - name: giftCodes
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/ExpireGiftCodesResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/miniStores/search':
    get:
      summary: Search mini store
      operationId: SearchMiniStores
      parameters:
        - name: orderId
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/SearchMiniStore'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/miniStores/CustomerShipments':
    get:
      summary: Get Customer Shipments
      operationId: GetCustomerShipments
      parameters:
        - name: orderId
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CustomerShipmentsInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/miniStores/purchase':
    get:
      summary: Get Mini Store Purchase Information
      operationId: GetMiniStorePurchaseInfo
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
        - name: meterNumber
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/MiniStorePurchaseInfo'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      summary: Mini Store Purchase
      operationId: MiniStorePurchase
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/MiniStorePurchaseRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/searchOrderId':
    get:
      summary: Search account and its orders by OrderId
      operationId: SearchOrderId
      parameters:
        - name: orderId
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/searchShippingGroupId':
    get:
      summary: Search account and its orders by ShippingGroupId
      operationId: SearchShippingGroupId
      parameters:
        - name: shippingGroupId
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/searchOemOrderId':
    get:
      summary: Search account and its orders by oemOrderId
      operationId: SearchOemOrderId
      parameters:
        - name: oemOrderId
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/searchEnvelopeNumber':
    get:
      summary: Search account and its orders by envelopeNumber
      operationId: SearchEnvelopeNumber
      parameters:
        - name: envelopeNumber
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/replaceOrder':
    post:
      summary: Replace an order
      operationId: ReplaceOrder
      parameters:
        - name: replaceOrderRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReplaceOrderRequest'
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/refundOrder':
    post:
      summary: Refund an order
      operationId: RefundOrder
      parameters:
        - name: refundRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/RefundOrderRequest'
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/orders/getOrdersByProfileId':
    get:
      summary: get orders by profileId up to 20
      operationId: getOrdersByProfileId
      parameters:
        - name: profileId
          in: query
          required: true
          type: string
        - name: startIndex
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderSummary'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/checkStatus':
    get:
      operationId: CheckStatus
      parameters:
        - in: query
          name: integrationId
          required: true
          type: string
        - in: query
          name: username
          required: true
          type: string
        - in: query
          name: ipAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/user/unlock':
    post:
      operationId: UnlockUser
      parameters:
        - in: query
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/user/getStatus':
    get:
      operationId: GetUserStatus
      parameters:
        - in: query
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/user/whitelist':
    post:
      operationId: WhitelistUser
      parameters:
        - in: query
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: DeleteWhitelistUser
      parameters:
        - in: query
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/ipAddress/unlock':
    post:
      operationId: UnlockIp
      parameters:
        - in: query
          name: ipAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/ipAddress/getStatus':
    get:
      operationId: GetIpStatus
      parameters:
        - in: query
          name: ipAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/ipAddressRange/whitelist':
    post:
      operationId: WhitelistIp
      parameters:
        - in: query
          name: BeginIpAddress
          required: true
          type: string
        - in: query
          name: EndIpAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: DeleteWhitelistIp
      parameters:
        - in: query
          name: BeginIpAddress
          required: true
          type: string
        - in: query
          name: EndIpAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/ipAddressRange/blacklist':
    post:
      operationId: BlacklistIp
      parameters:
        - in: query
          name: BeginIpAddress
          required: true
          type: string
        - in: query
          name: EndIpAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: DeleteBlacklistIp
      parameters:
        - in: query
          name: BeginIpAddress
          required: true
          type: string
        - in: query
          name: EndIpAddress
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/integrationId/getIpLockoutStatus':
    get:
      operationId: GetIntegrationIdIpLockoutStatus
      parameters:
        - in: query
          name: integrationId
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/integrationId/enableIpLockout':
    post:
      operationId: EnableIntegrationIdIpLockout
      parameters:
        - in: query
          name: integrationId
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/integrationId/disableIpLockout':
    delete:
      operationId: DisableIntegrationIdIpLockout
      parameters:
        - in: query
          name: integrationId
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/rules':
    get:
      operationId: GetRuleThresholds
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/FraudRulesInformation'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: SetRuleThreshold
      parameters:
        - in: body
          name: rules
          required: true
          schema:
            $ref: '#/definitions/FraudRulesInformation'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/phones/verificationEnabled':
    get:
      operationId: GetPhoneVerificationEnabled
      responses:
        '200':
          description: Success request
          schema:
            type: integer
            format: int16
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: SetPhoneVerificationEnabled
      parameters:
        - name: status
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/phones/verificationAudit':
    get:
      operationId: GetPhoneVerificationAudit
      parameters:
        - name: Page
          in: query
          type: integer
          format: int32
        - name: PageSize
          in: query
          type: integer
          format: int32
        - name: BridgeIdFilter
          in: query
          type: integer
          format: int32
        - name: AccountNoFilter
          in: query
          type: integer
          format: int32
        - name: UsernameFilter
          in: query
          type: string
        - name: PhoneFilter
          in: query
          type: string
        - name: RequiredLatestAuditId
          in: query
          type: boolean
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/PhoneVerificationAuditResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: AddPhoneVerificationAudit
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/AddPhoneVerificationAuditRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/phones/whitelist':
    get:
      operationId: GetPhoneWhitelist
      parameters:
        - in: query
          name: page
          required: true
          type: integer
          format: int32
        - in: query
          name: pageSize
          required: true
          type: integer
          format: int32
        - in: query
          name: phoneFilter
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/PhoneWhitelistResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: AddPhoneWhitelist
      parameters:
        - in: query
          name: phone
          required: true
          type: string
        - in: query
          name: dateStart
          required: true
          type: string
          format: date-time
        - in: query
          name: dateEnd
          required: true
          type: string
          format: date-time
        - in: query
          name: comments
          required: true
          type: string
        - in: query
          name: addedBy
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: UpdatePhoneWhitelist
      parameters:
        - in: query
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          name: dateStart
          required: true
          type: string
          format: date-time
        - in: query
          name: dateEnd
          required: true
          type: string
          format: date-time
        - in: query
          name: comments
          required: true
          type: string
        - in: query
          name: addedBy
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/phones/blacklist':
    get:
      operationId: GetPhoneBlacklist
      parameters:
        - in: query
          name: page
          required: true
          type: integer
          format: int32
        - in: query
          name: pageSize
          required: true
          type: integer
          format: int32
        - in: query
          name: phoneFilter
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/PhoneBlacklistResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: AddPhoneBlacklist
      parameters:
        - in: query
          name: phone
          required: true
          type: string
        - in: query
          name: comments
          required: true
          type: string
        - in: query
          name: addedBy
          required: true
          type: string
        - in: query
          name: isActive
          required: true
          type: boolean
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    post:
      operationId: UpdatePhoneBlacklist
      parameters:
        - in: query
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          name: comments
          required: true
          type: string
        - in: query
          name: addedBy
          required: true
          type: string
        - in: query
          name: isActive
          required: true
          type: boolean
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/phones/phoneVerificationStatus':
    post:
      operationId: UpdatePhoneVerificationStatus
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/UpdatePhoneVerificationStatusRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/country/blacklist':
    get:
      operationId: GetCountryBlacklist
      responses:
        '200':
          description: Sucess request
          schema:
            $ref: '#/definitions/CountryBlacklistResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: AddCountryBlacklist
      parameters:
        - name: ISOCode
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: DeleteCountryBlacklist
      parameters:
        - name: ISOCode
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/country/whitelist':
    get:
      operationId: GetCountryWhitelist
      parameters:
        - name: custId
          in: query
          required: false
          type: integer
          format: int32
        - name: userName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/CountryWhitelistResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: AddCountryWhitelist
      parameters:
        - name: ISOCode
          in: query
          required: true
          type: string
        - name: custId
          in: query
          required: false
          type: integer
          format: int32
        - name: userName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    delete:
      operationId: DeleteCountryWhitelist
      parameters:
        - name: ISOCode
          in: query
          required: true
          type: string
        - name: custId
          in: query
          required: false
          type: integer
          format: int32
        - name: userName
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/fraudConfigurations/country':
    get:
      operationId: GetFraudCountryList
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/FraudCountryResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/Corporation':
    post:
      operationId: CreateCorporation
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/CorporationRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/AddMetersToCorporation':
    post:
      operationId: AddMetersToCorporation
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/AddMetersToCorporationRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/customers/SecurityPolicies':
    get:
      operationId: GetSecurityPolicies
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/SecurityPolicy'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/IntegrationIds/ResellerIds':
    get:
      operationId: GetResellerIds
      responses:
        '200':
          description: Success request
          schema:
            type: array
            items:
              $ref: '#/definitions/IdDescription'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/IntegrationIds/{integrationId}':
    get:
      operationId: GetIntegrationId
      parameters:
        - in: path
          name: integrationId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/GetIntegrationIdResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
    put:
      operationId: UpdateIntegrationId
      parameters:
        - in: path
          name: integrationId
          required: true
          type: string
          format: uuid
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/UpdateIntegrationIdRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/IntegrationIds':
    post:
      operationId: CreateIntegrationId
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/CreateIntegrationIdRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/parcelGuard/includedInsurances':
    get:
      operationId: GetIncludedInsurances
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/IncludedInsuranceResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/addKiosks':
    post:
      summary: Add Kiosks
      operationId: AddKiosks
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/AddKiosksRequest'
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/AddKiosksResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/getKiosk':
    get:
      summary: Get Kiosk
      operationId: GetKiosk
      parameters:
        - name: idOrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/GetKioskResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/getKioskDetails':
    get:
      summary: Get Kiosk Details
      operationId: GetKioskDetails
      parameters:
        - name: idOrName
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/GetKioskDetailsResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/setKioskStatus':
    post:
      summary: Set Kiosk Status
      operationId: SetKioskStatus
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/SetKioskStatusRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/setKioskDetails':
    post:
      summary: Set Kiosk Details
      operationId: SetKioskDetails
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/SetKioskDetailsRequest'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/payByCheck':
    post:
      summary: Pay By Check
      operationId: PayByCheck
      parameters:
        - name: StationId
          in: query
          required: true
          type: integer
          format: int32
        - name: StationName
          in: query
          required: true
          type: string
        - name: Amount
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/MeterResetResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/ibmKiosks/payByACH':
    post:
      summary: Pay By ACH
      operationId: PayByAch
      parameters:
        - name: StationId
          in: query
          required: true
          type: integer
          format: int32
        - name: StationName
          in: query
          required: true
          type: string
        - name: Amount
          in: query
          required: true
          type: number
          format: decimal
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/MeterResetResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/dynamicpayment/DynamicPaymentFields':
    get:
      summary: Get Dynamic PaymentFields
      operationId: GetDynamicPaymentFields
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
          schema:
            $ref: '#/definitions/DynamicPaymentFields'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/dynamicpayment/InsertDynamicPaymentFields':
    post:
      summary: Insert Dynamic PaymentFields
      operationId: InsertDynamicPaymentFields
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/DynamicPaymentFields'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/dynamicpayment/UpdateDynamicPaymentFields':
    post:
      summary: Update Dynamic PaymentFields
      operationId: UpdateDynamicPaymentFields
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/DynamicPaymentFields'
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/dynamicpayment/DeleteDynamicPaymentFields':
    post:
      summary: Delete Dynamic PaymentFields
      operationId: DeleteDynamicPaymentFields
      parameters:
        - name: custId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/dynamicpayment/NullifyDynamicPaymentFields':
    post:
      summary: Nullify Dynamic PaymentFields
      operationId: NullifyDynamicPaymentFields
      parameters:
        - name: field
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/throttle/{username}/GetThrottlingRate':
    get:
      tags:
        - Throttle
      operationId: Throttle_GetThrottlingRate
      parameters:
        - type: string
          name: username
          in: path
          required: true
          x-nullable: false
        - type: string
          name: throttleID
          in: query
          required: true
          x-schema:
            $ref: '#/definitions/ThrottleID'
          x-nullable: false
          enum:
            - None
            - AuthenticateUser
            - CreateIndicium
            - CreateManifest
            - PurchasePostage
            - CancelIndicium
            - GetRates
            - GetAccountInfo
            - ChangePlan
            - ChangePayment
      responses:
        '200':
          x-nullable: true
          description: ''
          schema:
            $ref: '#/definitions/ThrottleRateResult'
  '/throttle/{username}/SetThrottlingRate':
    post:
      tags:
        - Throttle
      operationId: Throttle_SetThrottlingRate
      parameters:
        - type: string
          name: username
          in: path
          required: true
          x-nullable: false
        - type: integer
          name: userId
          in: query
          required: true
          format: int32
          x-nullable: false
        - type: string
          name: throttleID
          in: query
          required: true
          x-schema:
            $ref: '#/definitions/ThrottleID'
          x-nullable: false
          enum:
            - None
            - AuthenticateUser
            - CreateIndicium
            - CreateManifest
            - PurchasePostage
            - CancelIndicium
            - GetRates
            - GetAccountInfo
            - ChangePlan
            - ChangePayment
        - type: integer
          name: bucketLimit
          in: query
          required: true
          format: int32
          x-nullable: false
        - type: integer
          name: refillSize
          in: query
          required: true
          format: int32
          x-nullable: false
        - type: integer
          name: refillIntervalMS
          in: query
          required: true
          format: int32
          x-nullable: false
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  /platform-management/reseller-partners:
    get:
      tags:
      - PlatformManagement
      operationId: GetResellerPartners
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ResellerPartner'
  /platform-management/{resellerId}/reseller-partner:
    get:
      tags:
      - PlatformManagement
      operationId: GetResellerPartner
      parameters:
      - type: integer
        name: resellerId
        in: path
        required: true
        format: int32
        x-nullable: false
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            $ref: '#/definitions/ResellerPartner'
  /platform-management/reseller-partner:
    post:
      tags:
      - PlatformManagement
      operationId: SaveResellerPartner
      parameters:
      - name: resellerPartner
        in: body
        required: true
        schema:
          $ref: '#/definitions/ResellerPartner'
        x-nullable: true
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            $ref: '#/definitions/ResellerPartner'
  /platform-management/platform-defaults:
    get:
      tags:
      - PlatformManagement
      operationId: GetPlatformDefaults
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            $ref: '#/definitions/PlatformDefaults'
  /platform-management/{userName}/default-funding-info:
    post:
      tags:
      - PlatformManagement
      operationId: SaveDefaultFundingInfo
      parameters:
      - type: string
        name: userName
        in: path
        required: true
        x-nullable: false
      - name: defaultFundingInfoList
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/DefaultFundingInfo'
        x-nullable: true
      responses:
        200:
          x-nullable: true
          description: ''
          schema:
            type: file
  /platform-management/{userName}/sas-platform:
    post:
      tags:
      - PlatformManagement
      operationId: CreateSASPlatform
      parameters:
      - type: string
        name: userName
        in: path
        required: true
        x-nullable: false
      - name: sasPlatformRequest
        in: body
        required: true
        schema:
          $ref: '#/definitions/SASPlatformRequest'
        x-nullable: true
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            $ref: '#/definitions/SASPlatformResponse'
  /platform-management/platform-meters:
    post:
      tags:
      - PlatformManagement
      operationId: AddPlatformMeters
      parameters:
      - name: platformAndMeterInfoRequest
        in: body
        required: true
        schema:
          $ref: '#/definitions/PlatformAndMeterInfoRequest'
        x-nullable: true
      responses:
        200:
          x-nullable: true
          description: ''
          schema:
            type: file
  /platform-management/{resellerId}/platform-meters:
    get:
      tags:
      - PlatformManagement
      operationId: GetPlatformMeters
      parameters:
      - type: integer
        name: resellerId
        in: path
        required: true
        format: int32
        x-nullable: false
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformMeterResponse'
  /platform-management/platform-meters/retry:
    post:
      tags:
      - PlatformManagement
      operationId: RetryFailedMeterRegistration
      parameters:
      - name: custIds
        in: body
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
        x-nullable: true
      responses:
        200:
          x-nullable: true
          description: ''
          schema:
            type: file
  /platform-management/{resellerId}/platform-meter-pool-mid:
    get:
      tags:
      - PlatformManagement
      operationId: GetPlatformMeterPoolMID
      parameters:
      - type: integer
        name: resellerId
        in: path
        required: true
        format: int32
        x-nullable: false
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlatformMeterPoolMID'
  /platform-management/resellers:
    get:
      tags:
      - PlatformManagement
      operationId: GetResellers
      responses:
        200:
          x-nullable: false
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Reseller'
  /platform-management/platform-meters/sync:
    post:
      tags:
      - PlatformManagement
      operationId: SyncPlatformMeterData
      responses:
        200:
          x-nullable: true
          description: ''
          schema:
            type: file
  '/throttle/{username}/SetDefaultThrottlingRate':
    post:
      tags:
        - Throttle
      operationId: Throttle_SetDefaultThrottlingRate
      parameters:
        - type: string
          name: username
          in: path
          required: true
          x-nullable: false
        - type: string
          name: throttleID
          in: query
          required: true
          x-schema:
            $ref: '#/definitions/ThrottleID'
          x-nullable: false
          enum:
            - None
            - AuthenticateUser
            - CreateIndicium
            - CreateManifest
            - PurchasePostage
            - CancelIndicium
            - GetRates
            - GetAccountInfo
            - ChangePlan
            - ChangePayment
      responses:
        '200':
          description: Success request
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  /platform-management/associate-resellerid-with-reseller-partner:
    post:
      tags:
      - PlatformManagement
      operationId: AssociateResellerIDWithResellerPartner
      parameters:
      - name: resellerPartnerInfo
        in: body
        required: true
        schema:
          $ref: '#/definitions/ResellerPartnerInfo'
        x-nullable: true
      responses:
        200:
          x-nullable: true
          description: ''
          schema:
            type: file
  '/sasPlatforms/{resellerId}/mailerId':
    post:
      summary: Add a MailerId for a SAS platform
      operationId: AddMailerIdForSasPlatform
      parameters:
        - name: resellerId
          in: path
          required: true
          type: integer
        - name: sasPlatformMailerId
          in: body
          required: true
          schema:
            $ref: '#/definitions/SasPlatformMailerId'
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/sasPlatforms/{resellerId}/mailerIds/{mailerLookupId}':
    post:
      summary: Update mailerId for a SAS platform
      operationId: UpdateMailerIdForSasPlatform
      parameters:
        - name: resellerId
          in: path
          required: true
          type: integer
        - name: mailerLookupId
          in: path
          required: true
          type: integer
        - name: sasPlatformMailerId
          in: body
          required: true
          schema:
            $ref: '#/definitions/SasPlatformMailerId'
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
  '/shipworks/LegacyShipworksEmail':
    post:
      summary: Update shipworks legacy shipworks email 
      operationId: BulkUpdateLegacyShipworksEmail
      parameters:
        - name: currentEmail
          in: query
          required: true
          type: string
        - name: newEmail
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Success request
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
definitions:
  ErrorResponse:
    type: object
    properties:
      Error:
        $ref: '#/definitions/Error'
  Error:
    type: object
    properties:
      Code:
        type: string
      Message:
        type: string
  SearchCustomersResult:
    type: object
    properties:
      UserName:
        type: string
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int64
      MeterNo:
        type: number
        format: decimal
      IsActiveUser:
        type: boolean
      FirstName:
        type: string
      LastName:
        type: string
      PhoneNumber:
        type: string
      EmailAddress:
        type: string
      CompanyName:
        type: string
      DateOpened:
        type: string
        format: DateTime
      DateClosed:
        type: string
        format: DateTime
  LoadCustomerProfileResult:
    type: object
    properties:
      UserName:
        type: string
      CompanyName:
        type: string
      UserFullName:
        $ref: '#/definitions/Name'
      Merchant:
        type: string
      MeterProvider:
        type: string
      AccountType:
        type: integer
        format: int32
        minimum: 0
        maximum: 3
        default: 0
        description: 'Core-0,SAS-1,SAS_DMC-2,SAS_CBP-3'
      RateSetType:
        type: integer
        format: int32
        minimum: 0
        maximum: 4
        default: -1
        description: 'Unknown--1,Retail-0,CBP-1,CPP-2,NSA-3,SAS-4'
      Platform:
        type: integer
        format: int32
      ResellerAccountId:
        type: integer
        format: int64
      IsSasDmc:
        type: boolean
      IsBackendMeter:
        type: boolean
      CorpId:
        type: integer
        format: int32
      ProfileId:
        type: string
      TermsVersion:
        type: integer
        format: int32
      TermsDescription:
        type: string
      UserRole:
        type: string
      CurrentNoOfUsers:
        type: integer
        format: int32
      HasUspsRep:
        type: boolean
      SingleSignOnEnabled:
        type: boolean
      ShipWorkLink:
        type: string
      OmasAccountId:
        type: string
      EpsAccount:
        type: string
      GppUsername:
        type: string
      AccountStatus:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        description: 'Active-0,OnHold-1,Closed-2,PendingClosure-3,Suspended-4,Raw-5,Unleased-6,Assigned-7,Leased-8,Withdrawn-9,PasswordReset-10,FraudLocked-11'
      StatusReason:
        type: integer
        format: int32
      UserStatus:
        type: integer
        format: int32
        minimum: 0
        maximum: 3
        default: 0
        description: 'NotFound-0,Active-1,Inactive-2,Invited-3'
      ResubmissionRequired:
        type: boolean
      LicenseStatus:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        default: 0
        description: 'sdcLicenseApproved-0,sdcLicenseRejected-1,sdcLicensePending-2,sdcApplicationPending-3,sdcApplicationRejected-4,sdcLicenseRevoked-5,sdcLicenseUpdated-6,sdcLicenseDPlace-7,sdcLicenseSuspended-8,sdcLicenseUnsolicitedUpdate-9,sdcApplicationUpdatePending-10,sdcApplicationAborted-11'
      DateOpened:
        type: string
        format: DateTime
      DateClosed:
        type: string
        format: DateTime
      TrialEndDate:
        type: string
        format: DateTime
      LastPrintDate:
        type: string
        format: DateTime
      CustFullName:
        $ref: '#/definitions/Name'
      MailingAddress:
        $ref: '#/definitions/Address'
      PhysicalAddress:
        $ref: '#/definitions/Address'
      UserEmailAddress:
        type: string
      CompanyEmailAddress:
        type: string
      PhoneNumber:
        type: string
      StoreBillingInfo:
        $ref: '#/definitions/BillingInfo'
      ServiceBillingInfo:
        $ref: '#/definitions/BillingInfo'
      PostageBillingInfo:
        $ref: '#/definitions/BillingInfo'
      PostageDefaultedAsServiceBilling:
        type: boolean
      CurrentPricingPlan:
        $ref: '#/definitions/PricingPlan'
      MultiUserPlan:
        type: boolean
      PendingPricingPlan:
        $ref: '#/definitions/PricingPlan'
      NextStatementDate:
        type: string
        format: DateTime
      IsLabelFeeRateEnabled:
        type: boolean
      IsZeroPostageBalanceEnabled:
        type: boolean
      PromoCode:
        type: string
      OfferName:
        type: string
      OfferDescription:
        type: string
      RegistrationCookie:
        type: string
      DuplicatePromoCheck:
        type: integer
        format: int32
        minimum: 0
        maximum: 3
        default: 0
        description: 'Eligible-0,NotEligible_CCCheck-1,NotEligible_CookieCheck-2,NotEligible_MACChceck-3'
      CurrentBalance:
        type: number
        format: decimal
      TotalLabelsPrinted:
        type: integer
        format: int64
      PurchasedAndCredited:
        type: number
        format: decimal
      TotalPostagePurchased:
        type: number
        format: decimal
      InitialFreePostage:
        type: number
        format: decimal
      Comment:
        type: string
      ActiveUsers:
        type: array
        items:
          $ref: '#/definitions/AccountUser'
      InactiveUsers:
        type: array
        items:
          $ref: '#/definitions/AccountUser'
  Name:
    type: object
    properties:
      FirstName:
        type: string
      Middlename:
        type: string
      LastName:
        type: string
  Address:
    type: object
    properties:
      Street:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
  BillingInfo:
    type: object
    properties:
      PaymentType:
        type: integer
        format: int32
        minimum: 0
        maximum: 4
        default: 0
        description: 'ACH-0,CreditCard-1,Invoice-2,Eps=3,Omas-4'
      DefaultPayment:
        type: string
      BillingName:
        type: string
      BillingAddress:
        $ref: '#/definitions/Address'
  PricingPlan:
    type: object
    properties:
      Sku:
        type: number
        format: decimal
      Name:
        type: string
      MonthlyFee:
        type: number
        format: decimal
      AnnualFee:
        type: number
        format: decimal
  AccountUser:
    type: object
    properties:
      UserId:
        type: integer
        format: int32
      UserName:
        type: string
      UserRoles:
        type: string
      PerPrintLimit:
        type: number
        format: decimal
      PurchasePostageEnabled:
        type: boolean
      FedExEnabled:
        type: boolean
      StoreEnabled:
        type: boolean
      CostCodeRequired:
        type: boolean
  CreditCardInfoAndRefundHistory:
    type: object
    properties:
      PurchaseSummary:
        type: array
        items:
          $ref: '#/definitions/PurchaseSummaryItem'
      InstantCreditSummary:
        type: array
        items:
          $ref: '#/definitions/InstantCreditSummaryItem'
      ContainsPaymentInfo:
        type: boolean
      CreditCardPaymentInfo:
          $ref: '#/definitions/CreditCardPaymentInformation'
      InstantCreditReasons:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  PurchaseSummaryItem:
    type: object
    properties:
      PurchaseName:
        type: string
      PaymentTypeName:
        type: string
      OrderCount:
        type: integer
        format: int32
      AmmountTotalCents:
        type: integer
        format: int32
      TaxTotalCents:
        type: integer
        format: int32
      ShippingTotalCents:
        type: integer
        format: int32
      GrandTotalCents:
        type: integer
        format: int32
  InstantCreditSummaryItem:
    type: object
    properties:
      TransactionType:
        type: string
      CreationDate:
        type: string
        format: DateTime
      Amount:
        type: number
        format: decimal
      OrderStatusName:
        type: string
      ReasonCode:
        type: integer
        format: byte
      Comments:
        type: string
      CSRName:
        type: string
  CreditCardPaymentInformation:
    type: object
    properties:
      AccounType:
        type: string
      ExpiryDate:
        type: string
      AccountLast4:
        type: string
      Holder:
        type: string
      Street:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
  AccountCreditRequest:
    type: object
    properties:
      IsSasDmc:
        type: boolean
      CustId:
        type: integer
        format: int32
      MeterNumber:
        type: number
        format: decimal
      ResellerAccountId:
        type: integer
        format: int64
      ProfileId:
        type: string
      IsOmasAccount:
        type: boolean
      AmountInPennies:
        type: integer
        format: int64
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 36
        description: 'None-0,AccountRefundCredit-1,KeyCustomer-2,CustomerPaymentNotCreditedPreviously-3,DemoAccount-4,DisputedAmountPaid-5,MarketingPromotion-6,PreventAccountClosure-7,ServicePlanFreePostageNotAddedInitially-8,UnhappyWithExperience-9,ValuedCustomer-10,MisprintedPostageCredit-11,MisprintedPostageProof-12,MisprintedPostageCSNoProof-13,FreePostageCoupon-14,ERefundCredit-15,AdminCredit-16,PostageCompensation-17,FailedDupPromoCheck-18,ReferAFriendProgram-19,PostageCredit-20,RetentionTechnique-21,EaganOverride-22,ExpressMailVolumeRebate-23,PromoCouponRET-24,PromoCouponMANUAL-25,FiveDollarRetentionTechnique-26,MisprintedPostageCCNoProofOrClaimDenied-27,MisprintedPostageCCTech-28,FiveDollarInitialSignUpGrant-29,UnusedPostageApprovalAppeal-30,Check-31,Overdraft-32,CreditPendingPostagePurchase-33,ParcelGuardClaim-35,EnterprisePaymentAccountCredit-36'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - IsSasDmc
      - CustId
      - ProfileId
      - IsOmasAccount
      - AmountInPennies
      - Reason
      - Comments
      - CustRepName
  AccountDebitRequest:
    type: object
    properties:
      ResellerAccountId:
        type: integer
        format: int64
      Amount:
        type: number
        format: decimal
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - ResellerAccountId
      - AmountInPennies
      - Comments
      - CustRepName
  ServiceFeeAdjustmentRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      MeterNumber:
        type: number
        format: decimal
      AmountInPennies:
        type: integer
        format: int64
      IsCredit:
        type: boolean
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 27
        description: 'None-0,FinalBillProrating-1,PlanChange-2,RetentionEffortCusPastDue-3,PaymentArrangementCustPastDue-4,KeyCustomer-5,DemoAccount-6,Employee-7,FailedTransactionFees-8,MarketingPromotion-9,NotChargedForPreviousFees-10,OtherAdjustment-11,OverChargedForPreviousFees-12,PreventAccountClosure-13,UnhappyWithExperience-14,ValuedCustomer-15,AccountActivationFee-16,AccountClosureProcessingFee-17,LateFee-18,ChangeOfServiceFee-19,Chargeback-20,ChargebackProcessingFee-21,ReturnedACHTransaction-22,ReturnedPaymentFee-23,CancellationFee-24,EquipmentReplacementCharge-25,ValuedBilling-26,PaymentReceived-27'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - MeterNumber
      - AmountInPennies
      - IsCredit
      - Reason
      - Comments
      - CustRepName
  DynamicFeatureSettings:
    type: object
    properties:
      FeaturesList:
        type: object
        additionalProperties:
          $ref: '#/definitions/FeatureInfo'
  FeatureInfo:
    type: object
    properties:
      Name:
        type: string
      Group:
        type: string
      DisplayGroupId:
        type: integer
        format: int32
      DisplayGroupOrder:
        type: integer
        format: int32
      HiddenUnderAdvanced:
        type: boolean
      Description:
        type: string
      FormType:
        type: string
      DataType:
        type: string
      Value:
        type: string
      MinValue:
        type: number
        format: decimal
      MaxValue:
        type: number
        format: decimal
      MinCharLength:
        type: integer
        format: int32
      MaxCharLength:
        type: integer
        format: int32
      FeatureOptions:
        type: string
      Required:
        type: string
  SetDynamicFeatureSettings:
    type: object
    properties:
      SetFeaturesList:
        type: object
        additionalProperties:
          $ref: '#/definitions/SetFeatureInfo'
  SetFeatureInfo:
    type: object
    properties:
      Value:
        type: string
  FeatureSettings:
    type: object
    properties:
      AppCapInfo:
        $ref: '#/definitions/AppCapInformation'
      FciLefNonDocFee:
        type: number
        format: decimal
      DdpFee:
        type: number
        format: decimal
      FcPayOnUseReturnLabelFee:
        type: number
        format: decimal
      PmPayOnUseReturnLabelFee:
        type: number
        format: decimal
      GlobalAdvantagePickupCarrierId:
        type: integer
        format: int32
        minimum: -1
        maximum: 0
        description: 'None-1, Usps-0'
        default: 0
      OutstandingLabelBalanceLimit:
        type: number
        format: decimal
      UspsPercentage:
        type: number
        format: decimal
      DhlPercentage:
        type: number
        format: decimal
      FedExPercentage:
        type: number
        format: decimal
      WeightDifferenceInOuncesToIgnoreForAdjustment:
        type: number
        format: decimal
      ParcelGuardMaximumInsuredValue:
        type: number
        format: decimal
      MaximumDateAdvanceforShippingLabels:
        type: integer
        format: int32
      UseActualRateIngredientsForAdjustment:
        type: boolean
      DhlExpressAccountNumber:
        type: string
      HasOptedOutOfAutomatedEvents:
        type: boolean
      CanadaPostOuboundMarkUpPercentage:
        type: number
        format: decimal
      CanadaPostReturnMarkUpPercentage:
        type: number
        format: decimal
      ParcelGuardIncludedInsurances:
        type: array
        items:
          $ref: '#/definitions/ParcelGuardIncludedInsurancesItem'
      PsPayOnUseReturnLabelFee:
        type: number
        format: decimal
      PayOnUseReturnChargeType:
        type: integer
        format: int32
        minimum: 0
        maximum: 1
        description: 'UsedLabel-0, PerLabel-1'
        default: 0
      PayOnUseReturnPerLabelFee:
        type: number
        format: decimal
  ParcelGuardIncludedInsurancesItem:
    type: object
    properties:
      ServiceId:
        type: integer
        format: int32
      Amount:
        type: number
        format: decimal
  AppCapInformation:
    type: object
    properties:
      AppCap1On:
        type: integer
        format: int32
        minimum: 0
        description: 'See Sdc.Common.PostalProtocol.AppCaps'
        default: 0
      AppCap1Off:
        type: integer
        format: int32
        minimum: 0
        description: 'See Sdc.Common.PostalProtocol.AppCaps'
        default: 0
      AppCap2On:
        type: integer
        format: int32
        minimum: 0
        description: 'See Sdc.Common.PostalProtocol.AppCapsEx'
        default: 0
      AppCap2Off:
        type: integer
        format: int32
        minimum: 0
        description: 'See Sdc.Common.PostalProtocol.AppCapsEx'
        default: 0
      AppCap3On:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps3'
        default: 0
      AppCap3Off:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps3'
        default: 0
      AppCap4On:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps4'
        default: 0
      AppCap4Off:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps4'
        default: 0
      AppCap5On:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps5'
        default: 0
      AppCap5Off:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'See Sdc.Common.PostalProtocol.AppCaps5'
        default: 0
  SetFeatureSettings:
    allOf:
      - type: object
        properties:
          CustId:
            type: integer
            format: int32
      - $ref: '#/definitions/FeatureSettings'
  CurrentPlanInfoResult:
    type: object
    properties:
      CurrentPlanName:
        type: string
      CurrentFreeMonths:
        type: integer
        format: byte
      ServiceFeeReason:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  ServiceFeeWaiveRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      MeterNumber:
        type: number
        format: decimal
      RequestFreeMonths:
        type: integer
        format: byte
      CurrentFreeMonths:
        type: integer
        format: byte
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'None-0, KeyCustomer-1, DemoAccount-2, Employee-3, FailedTransactionFees-4, ImproperlyChargedForPreviousFees-5, MarketingPromotion-6, Other-7, PreventAccountClosure-8, UnhappyWithExperience-9, ValuedCustomer-10, PaymentReceived-11, RetentionOutOfTrial-12,, RetentionExtendTrial-13,, FinalBillFraud-14,, FinalBillDupAccnt-15, FinalBillCROnly-16, UnhappyWithExperienceCROnly-17'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - MeterNumber
      - RequestFreeMonths
      - CurrentFreeMonths
      - Reason
      - Comments
      - CustRepName
  AccountStatusHistoryResult:
    type: object
    properties:
      AccountStatus:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        description: 'Active-0,OnHold-1,Closed-2,PendingClosure-3,Suspended-4,Raw-5,Unleased-6,Assigned-7,Leased-8,Withdrawn-9,PasswordReset-10,FraudLocked-11'
      StatusHistory:
        type: array
        items:
          $ref: '#/definitions/AccountStatusHistoryItem'
  AccountStatusHistoryItem:
    type: object
    properties:
      Reason:
        type: string
      ChangeDate:
        type: string
        format: DateTime
      LoggedUser:
        type: string
      Comments:
        type: string
  PurchaseTransactionHistoryResult:
    type: object
    properties:
      Transactions:
        type: array
        items:
          $ref: '#/definitions/Tansaction'
      CurrentAccountBalance:
        type: number
        format: decimal
      LifetimePostagePurchase:
        type: number
        format: decimal
  Tansaction:
    type: object
    properties:
      PurchaseId:
        type: string
      PurchaseDate:
        type: string
        format: DateTime
      TransactionType:
        type: string
      TransactionSuccess:
        type: boolean
      Description:
        type: string
      Amount:
        type: number
        format: decimal
      Status:
        type: string
      Brand:
        type: string
  SearchMiniStore:
    type: object
    properties:
      Orders:
        type: array
        items:
          $ref: '#/definitions/MiniStoreOrder'
  MiniStoreOrder:
    type: object
    properties:
      Poid:
        type: number
        format: decimal
      Original_poid:
        type: number
        format: decimal
      CustID:
        type: integer
        format: int32
      DateCreated:
        type: string
        format: DateTime
      StatusDate:
        type: string
        format: DateTime
      Amount:
        type: number
        format: decimal
      ShipToFirstName:
        type: string
      ShipToMiddleName:
        type: string
      ShipToLastName:
        type: string
      ShipToStreet:
        type: string
      ShipToStreet1:
        type: string
      ShipToCity:
        type: string
      ShipToState:
        type: string
      ShipToZip:
        type: string
      CSRName:
        type: string
      Reason:
        type: integer
        format: byte
      Comments:
        type: string
      ShippingStatus:
        type: integer
        format: int32
      PurchaseStatus:
        type: integer
        format: int16
      OrderStatus:
        type: integer
        format: int32
      Reorders:
        type: array
        items:
          $ref: '#/definitions/ReOrder'
      OrderItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
  OrderItem:
    type: object
    properties:
      Poid:
        type: number
        format: decimal
      Sku:
        type: number
        format: decimal
      Quantity:
        type: integer
        format: int32
      Status:
        type: integer
        format: int32
      DateBatchable:
        type: string
        format: DateTime
      ItemNo:
        type: integer
        format: int32
  ReOrder:
    type: object
    properties:
      Poid:
        type: number
        format: decimal
      Original_poid:
        type: number
        format: decimal
      CustID:
        type: integer
        format: int32
      DateCreated:
        type: string
        format: DateTime
      Amount:
        type: number
        format: decimal
      ShipToFirstName:
        type: string
      ShipToMiddleName:
        type: string
      ShipToLastName:
        type: string
      ShipToStreet:
        type: string
      ShipToStreet1:
        type: string
      ShipToCity:
        type: string
      ShipToState:
        type: string
      ShipToZip:
        type: string
      ShippingStatus:
        type: integer
        format: int32
      PurchaseStatus:
        type: integer
        format: int16
      OrderStatus:
        type: integer
        format: int32
      ReOrderItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
  RefundHistory:
    type: object
    properties:
      Status:
        type: string
        enum: ['Requested', 'Processing', 'Approved', 'Denied', 'Duplicate']
      RefundRequestDate:
        type: string
        format: date-time
      RefundDate:
        type: string
        format: date-time
      RefundType:
        type: integer
        format: byte
      ClaimNumber:
        type: integer
        format: int32
      AmountRequested:
        type: number
        format: decimal
      AmountApproved:
        type: number
        format: decimal
      AmountCredited:
        type: number
        format: decimal
      DenialReason:
        type: string
      PrintDate:
        type: string
        format: date-time
      ShipDate:
        type: string
        format: date-time
      TrackingType:
        type: integer
        format: byte
        enum: ['None', 'InternetPostage', 'ShippingLabel']
      TrackingNumber:
        type: string
      Submitter:
        type: string
  Order:
    type: object
    properties:
      UserInfo:
        $ref: '#/definitions/UserSummary'
      OrderInfo:
        $ref: '#/definitions/OrderDetail'
      PaymentInfo:
        $ref: '#/definitions/PaymentGroup'
      ShippingInfo:
        type: array
        items:
          $ref: '#/definitions/ShippingGroup'
  OrderDetail:
    type: object
    properties:
      OrderId:
        type: string
      OrderStatus:
        type: string
      ProductTotal:
        type: string
      ShippingTotal:
        type: string
      TaxTotal:
        type: string
      OrderTotal:
        type: string
      OrderDate:
        type: string
      ReorderStatus:
        type: string
      PreviouslyAppliedCredit:
        type: number
        format: decimal
      MaxRefundAllowed:
        type: number
        format: decimal
      Refundability:
        type: integer
        format: int32
        minimum: 0
        maximum: 2
        default: 0
        description: 'CannotRefundInvoice-0, Refundable-1, NotReadForRefund-2'
  PaymentGroup:
    type: object
    properties:
      PaymentGroupId:
        type: string
      PaymentMethod:
        type: string
      State:
        type: string
      AmountCredited:
        type: string
      AmountDebited:
        type: string
      BillToAddress:
        $ref: '#/definitions/FullAddress'
  ShippingGroup:
    type: object
    properties:
      ShippingGroupId:
        type: string
      ShippingTrackingNumber:
        type: string
      ShippingStatus:
        type: string
      ShippingMethod:
        type: string
      ShippingDate:
        type: string
      InternalQaRequestId:
        type: string
      DateSubmittedToQa:
        type: string
      LineItems:
        type: array
        items:
          $ref: '#/definitions/LineItem'
      ShipToAddress:
        type: array
        items:
          $ref: '#/definitions/FullAddress'
  FullAddress:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
      Address:
        $ref: '#/definitions/Address'
  LineItem:
    type: object
    properties:
      LineId:
        type: string
      SkuId:
        type: string
      ProductId:
        type: string
      Quantity:
        type: string
      ProductTotal:
        type: string
      TaxTotal:
        type: string
      Description:
        type: string
  OrderSummary:
    type: object
    properties:
      OrderId:
        type: string
      OrderDate:
        type: string
      OrderStatus:
        type: string
  UserSummary:
    type: object
    properties:
      UserName:
        type: string
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int64
      ProfileId:
        type: string
      MeterNo:
        type: number
        format: decimal
      CompanyName:
        type: string
      UserFullName:
        $ref: '#/definitions/Name'
  ReplaceOrderRequest:
    type: object
    properties:
      OrderId:
         type: string
      ProfileId:
        type: string
      ShipMethod:
        type: integer
        format: int32
        minimum: 0
        maximum: 2
        description: 'Normal-0, Expedited-1, Rush-2'
      ShippingAddress:
        $ref: '#/definitions/CompleteAddress'
      Comments:
        type: string
      CustRepName:
        type: string
      ReorderGroups:
        type: array
        items:
          $ref: '#/definitions/ReorderGroup'
    required:
      - OrderId
      - ProfileId
      - ShipMethod
      - ShippingAddress
      - Comments
      - CustRepName
      - ReorderGroups
  ReorderGroup:
    type: object
    properties:
      ShippingGroupId:
        type: string
      ReorderItems:
        type: array
        items:
          $ref: '#/definitions/ReorderItem'
    required:
      - ShippingGroupId
      - ReorderItems
  ReorderItem:
    type: object
    properties:
      LineId:
        type: string
      Quantity:
        type: integer
        format: int32
    required:
      - LineId
      - Quantity
  CompleteAddress:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
      Company:
        type: string
      Address:
        $ref: '#/definitions/Address'
      Country:
        type: string
      Phone:
        type: string
      AddressType:
        type: integer
        format: int32
        minimum: 0
        maximum: 2
        description: 'Unspecified-0,Residential-1,Business-2'
  RefundOrderRequest:
    type: object
    properties:
      OrderId:
        type: string
      PaymentGroupId:
        type: string
      CustRepName:
        type: string
      ShippingCredit:
        type: number
        format: decimal
      RefundAmount:
        type: number
        format: decimal
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 4
        description: 'LostShipment-0,SheetsDamage-1,ReturnPartialOrder-2,ReturnFullOrder-3,Exchange-4'
      Comments:
        type: string
      ItemList:
        type: array
        items:
          $ref: '#/definitions/RefundItem'
    required:
      - OrderId
      - PaymentGroupId
      - CustRepName
      - ShippingCredit
      - RefundAmount
      - Reason
      - Comments
      - ItemList
  RefundItem:
    type: object
    properties:
      LineId:
        type: string
      RefundAmount:
        type: number
        format: decimal
      Quantity:
        type: integer
        format: int16
    required:
      - LineId
      - RefundAmount
      - Quantity
  CustomerShipmentsInfo:
    type: object
    properties:
      Shipments:
        type: array
        items:
          $ref: '#/definitions/Shipment'
  Shipment:
    type: object
    properties:
      ShipmentId:
        type: number
        format: decimal
      Poid:
        type: number
        format: decimal
      DateShipped:
        type: string
        format: date-time
      TrackingNo:
        type: string
      ShippingMethodId:
        type: integer
        format: int32
      ShipmentItems:
        type: array
        items:
          $ref: '#/definitions/ShipmentItem'
  ShipmentItem:
    type: object
    properties:
      ShipmentId:
        type: number
        format: decimal
      Sku:
        type: integer
        format: int32
      Quantity:
        type: integer
        format: int32
  InsuranceHistoryInfo:
    type: object
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/InsuranceHistoryItem'
  InsuranceHistoryItem:
    type: object
    properties:
      InsuranceId:
        type: string
      PrintDate:
        type: string
        format: date-time
      ShipDate:
        type: string
        format: date-time
      AmountPaid:
        type: number
        format: decimal
      InsuredFor:
        type: number
        format: decimal
      Destination:
        type: string
      TrackingNumber:
        type: string
      Status:
          type: string
          enum: ['Purchased', 'Canceled']
  CustomerContactInfo:
    type: object
    properties:
      MailingAddress:
        $ref: '#/definitions/MailingAddressInfo'
      PhysicalMeterAddress:
        $ref: '#/definitions/MeterPhysicalAddressInfo'
  SetCustomerContactInfoRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      MailingAddress:
        $ref: '#/definitions/MailingAddressInfo'
      PhysicalMeterAddress:
        $ref: '#/definitions/MeterPhysicalAddressInfo'
  MailingAddressInfo:
    type: object
    properties:
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
      Country:
        type: string
      PhoneNumber:
        type: string
      UserEmailAddress:
        type: string
      OrganizationEmailAddress:
        type: string
  MeterPhysicalAddressInfo:
    type: object
    properties:
      Address1:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
      ZipPlus4:
        type: string
  MiniStorePurchaseInfo:
    type: object
    properties:
      Company:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      EmailAddress:
        type: string
      Street:
        type: string
      City:
        type: string
      Zip:
        type: string
      ZipPlus4:
        type: string
      State:
        type: string
      MiniStorePurchasesItems:
        type: array
        items:
          $ref: '#/definitions/MiniStorePurchaseItem'
  MiniStorePurchaseItem:
    type: object
    properties:
      Sku:
        type: string
      Name:
        type: string
      Description:
        type: string
      ListPrice:
        type: integer
        format: int32
      MaxPurchasable:
        type: integer
        format: int32
  MiniStorePurchaseRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      Company:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Street:
        type: string
      City:
        type: string
      Zip:
        type: string
      ZipPlus4:
        type: string
      State:
        type: string
      Username:
        type: string
      Reason:
        type: integer
        format: int32
      Comments:
        type: string
      OriginalPoid:
        type: integer
        format: int32
      MiniStorePurchaseRequestItems:
        type: array
        items:
          $ref: '#/definitions/MiniStorePurchaseRequestItem'
  MiniStorePurchaseRequestItem:
    type: object
    properties:
      Sku:
        type: string
      Quantity:
        type: integer
        format: int32
  BalanceAndPurchaseLimitInfo:
    type: object
    properties:
      CurrentBalanceLimit:
        type: number
        format: decimal
      CurrentPurchaseLimit:
        type: number
        format: decimal
      MaxBalanceLimit:
        type: number
        format: decimal
      MinBalanceLimit:
        type: number
        format: decimal
      LpoZip:
        type: string
  SetBalanceLimitRequest:
    type: object
    properties:
      IsSasDmc:
        type: boolean
      MeterNumber:
        type: number
        format: decimal
      ResellerAccountId:
        type: integer
        format: int64
      CustomerId:
        type: integer
        format: int32
      LpoZip:
        type: string
      BalanceLimit:
        type: number
        format: decimal
      PurchaseLimit:
        type: number
        format: decimal
    required:
       - IsSasDmc
       - MaxBalanceLimit
  EmailHistoryResult:
    type: object
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/EmailHistoryItem'
      LinkHeader:
          $ref: '#/definitions/LinkHeaderResponse'
  EmailHistoryItem:
    type: object
    properties:
      MsgID:
        type: integer
        format: int64
      DateSent:
        type: string
        format: date-time
      MsgTo:
        type: string
      MsgSubject:
        type: string
      IsSilverPop:
        type: boolean
      MessageStatusDesc:
        type: string
      IsLegacyEmail:
        type: boolean
  LinkHeaderResponse:
    type: object
    properties:
      Links:
        type: array
        items:
          $ref: '#/definitions/Link'
  Link:
    type: object
    properties:
      Url:
        type: string
      Rel:
        type: string
      Method:
        type: string
  CreditAccountInfo:
    type: object
    properties:
      FrontEndBalance:
        type: number
        format: decimal
      BackEndBalance:
        type: number
        format: decimal
      CreditAccountReasonCatalog:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  CancelInsuranceRequest:
    type: object
    properties:
      MeterNumber:
        type: number
        format: decimal
      InsuranceId:
        type: array
        items:
          type: string
      CsrName:
          type: string
      Comment:
          type: string
    required:
      - MeterNumber
      - InsuranceId
      - CsrName
      - Comment
  PricingPlanInfo:
    type: object
    properties:
       CurrentPlan:
        $ref: '#/definitions/PricingPlan'
       PendingPlan:
        $ref: '#/definitions/PricingPlan'
       Catalog:
        $ref: '#/definitions/PricingPlanCatalog'
  PricingPlanCatalog:
    type: object
    properties:
       Items:
        type: array
        items:
          $ref: '#/definitions/CatalogItem'
  CatalogItem:
    type: object
    properties:
       Sku:
          type: string
       Name:
          type: string
       Description:
          type: string
       MaxPurchasable:
        type: integer
        format: int32
  CloseAccountInfo:
    type: object
    properties:
      Address:
        $ref: '#/definitions/Address'
      CancelReasonsCatalog:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
      NewMailingMethodsCatalog:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  CloseAccountRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      Address:
        $ref: '#/definitions/Address'
      CancelReason:
        $ref: '#/definitions/CancelReason'
      NewMailingMethod:
        $ref: '#/definitions/NewMailingMethod'
      CsrName:
        type: string
    required:
      - CustId
      - UserId
      - Address
      - CancelReason
      - NewMailingMethod
      - CsrName
  AccountOnHoldStatus:
    type: object
    properties:
      AdminHold:
        type: boolean
      PaymentHold:
        type: boolean
      ServiceFeeNotPaid:
        type: boolean
  AccountOnHoldStatusResult:
    type: object
    properties:
      AccountStatus:
        type: string
        enum: ['Active', 'OnHold', 'Closed', 'PendingClosure', 'Suspended', 'Raw', 'Unleased', 'Assigned', 'Leased', 'Withdrawn', 'PasswordReset', 'FraudLocked']
      Status:
        $ref: '#/definitions/AccountOnHoldStatus'
  AccountOnHoldStatusRequest:
    type: object
    properties:
      MeterNumber:
        type: number
        format: decimal
      ResellerAccountId:
        type: integer
        format: int64
      Comments:
        type: string
      CsrName:
        type: string
      Status:
        $ref: '#/definitions/AccountOnHoldStatus'
    required:
      - MeterNumber
      - Status
      - Comments
      - CsrName
  IdDescription:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Description:
        type: string
  CancelReason:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Description:
        type: string
        maxLength: 55
  NewMailingMethod:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Description:
        type: string
        maxLength: 32
  FraudRulesInformation:
    type: object
    properties:
      FraudEnabled:
        type: boolean
      Rules:
        type: array
        items:
          $ref: '#/definitions/FraudRules'
  FraudRules:
    type: object
    properties:
      RuleId:
        type: integer
        format: int16
      Threshold:
        type: number
        format: decimal
      Enabled:
        type: boolean
  CreateIntegrationIdRequest:
    type: object
    allOf:
      - properties:
          IntegrationId:
            type: string
            format: uuid
      - $ref: '#/definitions/IntegrationIdDetail'
      - required:
        - IntegrationId
        - Description
        - IntegrationCaps
        - AppCapMask
        - AppCap2Mask
        - AppCap3Mask
        - AppCap4Mask
  UpdateIntegrationIdRequest:
    type: object
    allOf:
      - $ref: '#/definitions/IntegrationIdDetail'
      - required:
        - Description
        - IntegrationCaps
        - AppCapMask
        - AppCap2Mask
        - AppCap3Mask
        - AppCap4Mask
  GetIntegrationIdResult:
    type: object
    allOf:
      - properties:
          IntegrationId:
            type: string
            format: uuid
      - $ref: '#/definitions/IntegrationIdDetail'
  IntegrationIdDetail:
    type: object
    properties:
      Description:
        type: string
      IntegrationCaps:
        type: integer
        format: byte
      AppCapMask:
        type: integer
        format: int64
      AppCap2Mask:
        type: integer
        format: int64
      AppCap3Mask:
        type: integer
        format: int64
      AppCap4Mask:
        type: integer
        format: int64
      OemCode:
        type: string
      SourceId:
        type: string
      ResellerId:
        type: integer
        format: int32
      IsAuthenticationOptional:
        type: boolean
  MachineUniqueDataInformation:
    type: object
    properties:
      IpAddress:
        type: string
      SystemDriveSerialNumberHash:
        type: string
      SystemVolumeGuidHash:
        type: string
      SystemVolumeSerialNumberHash:
        type: string
      MacAddressHash:
        type: string
      StampsMachineGuidHash:
        type: string
      DataSetNumber:
        type: integer
        format: int64
      DateSubmitted:
        type: string
        format: date-time
  ShipWorksInfo:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      AssociatedCustId:
        type: integer
        format: int32
      RecurlyAccountCode:
        type: string
      ContactInfo:
        $ref: '#/definitions/ShipWorksContactInfo'
      RecurlyStatusInfo:
        $ref: '#/definitions/ShipWorksRecurlyStatusInfo'
      CloseAccountReasons:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
      CancelReactivateSubscriptionReasons:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
      BillingPlans:
        $ref: '#/definitions/ShipWorksBillingPlan'
  ShipWorksRecurlyStatusInfo:
    type: object
    properties:
      BillingStartDate:
        type: string
        format: date-time
      BillingEndDate:
        type: string
        format: date-time
      TrialEndDate:
        type: string
        format: date-time
      CustomerStatus:
        type: string
        enum: ['Legacy', 'Current', 'PastDue', 'Disabled', 'Expired', 'Closed', 'Canceled']
      Reason:
        type: string
      DateChanged:
        type: string
        format: date-time
      Username:
        type: string
      HostedLoginToken:
        type: string
  ShipWorksBillingPlan:
    type: object
    properties:
      PlanId:
        type: integer
        format: int32
      RecurlyAddOnCodes:
        type: array
        items:
          type: string
      PendingPlanId:
        type: integer
        format: int32
      PendingRecurlyAddOnCodes:
        type: array
        items:
          type: string
      BillingPlans:
        $ref: '#/definitions/BillingPlan'
  BillingPlan:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Name:
        type: string
      RecurlyAddOnCodes:
          type: array
          items:
            $ref: '#/definitions/IdDescription'
  ShipWorksBillingHistory:
    type: object
    properties:
      TotalCount:
        type: integer
        format: int32
      Start:
        type: string
      Next:
        type: string
      Invoices:
        type: array
        items:
            $ref: '#/definitions/Invoice'
  Invoice:
    type: object
    properties:
      CreatedDateTime:
        type: string
        format: date-time
      InvoiceNumber:
        type: integer
        format: int32
      InvoiceState:
        format: string
        enum: ['Open', 'Collected', 'Failed', 'PastDue']
      Amount:
        type: number
        format: decimal
  ShipWorksContactInfo:
    type: object
    properties:
      FirstName:
        type: string
      LastName:
        type: string
      Company:
        type: string
      Phone:
        type: string
      Email  :
        type: string
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      Zip:
        type: string
      State:
        type: string
      Country:
        type: string
  ShipWorksBillingInfo:
    type: object
    properties:
      FirstName:
        type: string
      LastName:
        type: string
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      Zip:
        type: string
      State:
        type: string
      Country:
        type: string
      CardType:
        type: string
        enum: ['Invalid', 'Visa', 'MasterCard', 'AmericanExpress', 'Discover', 'JCB', 'Dankort', 'Maestro', 'Forbrugsforeningen', 'Laser', 'Unknown', 'DinersClub']
      CreditCardNumber:
        type: string
      CreditCardNumberLastFour:
        type: string
      ExpirationMonth:
        type: integer
        format: int32
      ExpirationYear:
        type: integer
        format: int32
      VerificationValue:
        type: string
  UpdateBillingPlanRequest:
    type: object
    properties:
      PlanId:
        type: integer
        format: int32
      RecurlyAddOnCodes:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  SasMeterResult:
    type: object
    properties:
      ResellerId:
        type: integer
        format: int32
      ResellerMeterPoolId:
        type: integer
        format: int32
      MeterNumber:
        type: integer
        format: int32
      ResellerMeterCustId:
        type: integer
        format: int32
      PostalClusterNumber:
        type: integer
        format: short
      DescRegInBridge:
        type: number
        format: decimal
      AccountAutoBuyThreshold:
        type: number
        format: decimal
      AccountAutoBuyAmount:
        type: number
        format: decimal
      StampsFundingThreshold:
        type: number
        format: decimal
      StampsFundingAmount:
        type: number
        format: decimal
      AutoBuyThreshold:
        type: number
        format: decimal
      AutoBuyAmount:
        type: number
        format: decimal
      LastPostagePurchaseTransactionId:
        type: integer
        format: long
      LastCustomerFundingLogId:
        type: integer
        format: int32
      Status:
        type: string
      AmtAvailInPostal:
        type: number
        format: decimal
      AmtUtlInPostal:
        type: number
        format: decimal
      LastPurchaseTime:
        type: string
        format: date-time
      LastPrintTime:
        type: string
        format: date-time
  SasPurchasePostageResult:
    type: object
    properties:
      PurchaseStatus:
        type: string
        enum: ['Pending', 'Processing', 'Success', 'Rejected']
      TransactionId:
        type: integer
        format: int32
      RejectionReason:
        type: string
      MeterInfo:
        $ref: '#/definitions/SasMeterResult'
      ErrorMessage:
        type: string
  MailerIdInfo:
    type: object
    properties:
      Primary:
        type: string
      Secondary:
        type: string
      PayOnUseReturn:
        type: string
      PayOnUseReturnMailerIdType:
        type: string
        enum: ['NSA', 'Partner']
  RateSetsResult:
    type: object
    properties:
      CarrierRateSetIds:
        type: array
        items:
          $ref: '#/definitions/CarrierRateSetId'
      CarrierRateSetCatalogs:
        type: array
        items:
          $ref: '#/definitions/CarrierRateSetCatelog'
      History:
        type: array
        items:
          $ref: '#/definitions/RateSetInfo'
      InsuranceRateSetId:
        type: integer
        format: int32
      InsuranceRateSetCatalog:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  RateSetsRequest:
    type: object
    properties:
      IsSasDmc:
        type: boolean
      CarrierRateSetIds:
        type: array
        items:
          $ref: '#/definitions/CarrierRateSetId'
      InsuranceRateSetId:
        type: integer
        format: int32
  CarrierRateSetId:
    type: object
    properties:
      Carrier:
        type: string
        enum: ['Usps', 'RRDonnelley', 'FedEx', 'DHLExpress', 'Unknown', 'Dhl', 'DhlInternational', 'Globegistics', 'Asendia', 'InternationalBondedCouriers', 'PostageOne', 'Osm', 'ETOE']
      Id:
        type: integer
        format: int32
  CarrierRateSetCatelog:
    type: object
    properties:
      Carrier:
        type: string
        enum: ['Usps', 'RRDonnelley', 'FedEx', 'DHLExpress', 'Unknown', 'Dhl', 'DhlInternational', 'Globegistics', 'Asendia', 'InternationalBondedCouriers', 'PostageOne', 'Osm', 'ETOE']
      RateSets:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  RateSetInfo:
    type: object
    properties:
      Carrier:
        type: string
        enum: ['Usps', 'RRDonnelley', 'FedEx', 'DHLExpress', 'Unknown', 'Dhl', 'DhlInternational', 'Globegistics', 'Asendia', 'InternationalBondedCouriers', 'PostageOne', 'Osm', 'ETOE']
      Id:
        type: integer
        format: int32
      Description:
        type: string
      CreationDateTime:
        type: string
        format: date-time
  ResendMessageItem:
    type: object
    properties:
      MsgID:
        type: integer
        format: int32
      IsSilverPop:
        type: boolean
      IsLegacyEmail:
        type: boolean
  MessageDetailResponse:
    type: object
    properties:
      CustID:
        type: integer
        format: int32
      TemplateName:
        type: string
      SentNvPairs:
        type: string
      MessageStatusDesc:
        type: string
      DateSent:
        type: string
        format: date-time
      ResendStatusDesc:
        type: string
      MsgFrom:
        type: string
      MsgFromName:
        type: string
      MsgTo:
        type: string
      MsgToName:
        type: string
      MsgSubject:
        type: string
  GetSecurityQuestionsResult:
    type: object
    properties:
      Question1:
        type: string
      Question2:
        type: string
  ServiceFeeTaxHistoryResult:
    type: object
    properties:
        ServiceFeeTaxHistory:
            type: array
            items:
                $ref: '#/definitions/ServiceFeeTaxHistoryItem'
  ServiceFeeTaxHistoryItem:
    type: object
    properties:
      BillingStartDate:
        type: string
        format: date-time
      TaxablePercentageOfServiceFee:
        type: number
        format: decimal
      ServiceFeeTaxRateInPercent:
        type: number
        format: decimal
  PromoPostCardHistoryResult:
    type: object
    properties:
      Items:
        type: array
        items:
            $ref: '#/definitions/PromoPostCardHistoryItem'
  PromoPostCardHistoryItem:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      DateScanned:
        type: string
        format: date-time
      DateCredited:
        type: string
        format: date-time
      Status:
        type: string
      PostageAmount:
        type: number
        format: decimal
  GetPhoneVerificationAuditRequest:
    type: object
    properties:
      Page:
        type: integer
        format: int32
      PageSize:
        type: integer
        format: int32
      BridgeIdFilter:
        type: integer
        format: int32
      AccountNoFilter:
        type: integer
        format: int32
      UsernameFilter:
        type: string
      PhoneFilter:
        type: string
      RequiredLatestAuditId:
        type: boolean
  UpdatePhoneVerificationStatusRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      PhoneVerificationAuditID:
        type: integer
        format: int64
      PhoneVerificationStatusID:
        type: string
        enum: ['Disabled', 'NotRequired', 'Required', 'Attempted', 'Verified', 'RequiredAdminHoldSelfRelease']
      PhoneVerificationReasonID:
        type: string
        enum: ['Unspecified', 'RepVerified', 'WhitelistedIntegrationID', 'PhoneWhitelistedWithinWindow', 'BlacklistedPhone', 'NewlyRegisteredAccount', 'RepOnboarded', 'PhoneVerificationIsDisabled', 'AttemptEditViolatedBlacklist', 'AttemptViolatedBlacklist', 'AttemptStartViolatedUpdateEditLimit', 'AttemptStartExpiredPhoneVerifyEdit', 'AttemptStartConflictedEditPhoneAgainstSystem', 'AttemptStartViolatedStartLimit', 'AttemptStartEligibleAlreadyVerified', 'AttemptStartTeleSignError', 'AttemptStarted', 'AttemptFinishViolatedFinishLimit', 'AttemptFinishViolatedVerifyCodeCheck', 'AttemptFinishExpiredVerifyCode', 'AttemptTrustedFinishIncorrectIntegrationIdPassword', 'AttemptFinished', 'AttemptFinishViolatedBlacklist', 'AttemptTrustedFinishViolatedBlacklist', 'ConflictedTrustedPhoneAgainstVerification', 'AttemptFinishLinkToStartAuditMissing', 'ByFraudTeam', 'SystemDown', 'ChildUser', 'CRT']
      OverrideVerificationPhone:
        type: string
      OverrideVerificationPhoneExtension:
        type: string
      DoneBy:
        type: string
      ClientIpAddress:
        type: string
  AddPhoneVerificationAuditRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      PhoneVerificationStatusID:
        type: string
        enum: ['Disabled', 'NotRequired', 'Required', 'Attempted', 'Verified', 'RequiredAdminHoldSelfRelease']
      PhoneVerificationReasonID:
        type: string
        enum: ['Unspecified', 'RepVerified', 'WhitelistedIntegrationID', 'PhoneWhitelistedWithinWindow', 'BlacklistedPhone', 'NewlyRegisteredAccount', 'RepOnboarded', 'PhoneVerificationIsDisabled', 'AttemptEditViolatedBlacklist', 'AttemptViolatedBlacklist', 'AttemptStartViolatedUpdateEditLimit', 'AttemptStartExpiredPhoneVerifyEdit', 'AttemptStartConflictedEditPhoneAgainstSystem', 'AttemptStartViolatedStartLimit', 'AttemptStartEligibleAlreadyVerified', 'AttemptStartTeleSignError', 'AttemptStarted', 'AttemptFinishViolatedFinishLimit', 'AttemptFinishViolatedVerifyCodeCheck', 'AttemptFinishExpiredVerifyCode', 'AttemptTrustedFinishIncorrectIntegrationIdPassword', 'AttemptFinished', 'AttemptFinishViolatedBlacklist', 'AttemptTrustedFinishViolatedBlacklist', 'ConflictedTrustedPhoneAgainstVerification', 'AttemptFinishLinkToStartAuditMissing', 'ByFraudTeam', 'SystemDown', 'ChildUser', 'CRT']
      Phone:
        type: string
      PhoneExtension:
        type: string
      DoneBy:
        type: string
      UpdatePhoneDB:
        type: boolean
      ClientIpAddress:
        type: string
  PhoneVerificationAuditResult:
    type: object
    properties:
      TotalCount:
        type: integer
        format: int32
      Records:
        type: array
        items:
            $ref: '#/definitions/PhoneVerificationAuditInfo'
  PhoneWhitelistResult:
    type: object
    properties:
      TotalCount:
        type: integer
        format: int32
      Records:
        type: array
        items:
            $ref: '#/definitions/PhoneWhitelistInfoV1'
  PhoneBlacklistResult:
    type: object
    properties:
      TotalCount:
        type: integer
        format: int32
      Records:
        type: array
        items:
            $ref: '#/definitions/PhoneBlacklistInfoV1'
  PhoneVerificationAuditInfo:
    type: object
    properties:
      AccountNo:
        type: integer
        format: int32
      Phone:
        type: string
      PhoneExtension:
        type: string
      PhoneVerificationStatus:
        type: string
      PhoneIsBlackListed:
        type : boolean
      PhoneBlackListComments:
        type: string
      AuditID:
        type: integer
        format: int64
      LatestAuditID:
        type: integer
        format: int64
      AuditDate:
        type: string
        format: DateTime
      AuditBridgeID:
        type: integer
        format: int32
      AuditUsername:
        type: string
      AuditPhone:
        type: string
      AuditPhoneExtension:
        type: string
      AuditPhoneIsBlackListed:
        type: boolean
      AuditPhoneBlackListComments:
        type: string
      AuditPhoneVerificationStatus:
        type: string
      AuditPhoneVerificationReason:
        type: string
      AuditVerifyCode:
        type: string
      AuditVerifyCodeExpiration:
        type: string
        format: DateTime
      VerifyCodeReferenceId:
        type: string
      VerificationOption:
        type: string
      AuditIPAddress:
        type: string
      AuditDoneBy:
        type: string
  PhoneWhitelistInfoV1:
    type: object
    properties:
      PhoneWhitelistID:
        type: integer
        format: int64
      Phone:
        type: string
      DateStart:
        type: string
        format: DateTime
      Expiration:
        type: string
        format: DateTime
      Comments:
        type: string
      AddedBy:
        type: string
      DateCreated:
        type: string
        format: DateTime
      DateUpdated:
        type: string
        format: DateTime
  PhoneBlacklistInfoV1:
    type: object
    properties:
      PhoneBlacklistID:
        type: integer
        format: int64
      IsActive:
        type: boolean
      Phone:
        type: string
      Comments:
        type: string
      AddedBy:
        type: string
      DateCreated:
        type: string
        format: DateTime
      DateUpdated:
        type: string
        format: DateTime
  CountryBlacklistResult:
    type: object
    properties:
      Records:
        type: array
        items:
          $ref: '#/definitions/CountryBlacklistInfoV1'
  CountryBlacklistInfoV1:
    type: object
    properties:
      ISOCode:
        type: string
      LastUpdated:
        type: string
        format: DateTime
  CountryWhitelistResult:
    type: object
    properties:
      Records:
        type: array
        items:
          $ref: '#/definitions/CountryWhitelistInfoV1'
  CountryWhitelistInfoV1:
    type: object
    properties:
      ISOCode:
        type: string
      CustId:
        type: integer
        format: int32
      DateCreated:
        type: string
        format: DateTime
  FraudCountryResult:
    type: object
    properties:
      Records:
        type: array
        items:
          $ref: '#/definitions/FraudCountryInfoV1'
  FraudCountryInfoV1:
    type: object
    properties:
      Country:
        type: string
      ISOCode:
        type: string
      CanBlacklist:
        type: boolean
      CanWhitelist:
        type: boolean
      LastUpdated:
        type: string
        format: DateTime
  OmasPaymentSettings:
    type: object
    properties:
      UseCode:
        type: integer
        format: int32
      FedCode:
        type: string
      FedSubCode:
        type: string
      OmasAccount:
        type: string
  ExpireGiftCodesResult:
    type: object
    properties:
      Items:
        type: array
        items:
            $ref: '#/definitions/GiftCode'
  GiftCode:
    type: object
    properties:
      GiftCodeId:
        type: string
      Result:
        type: string
  BalanceHistoryResult:
    type: object
    properties:
      BalanceHistoryToken:
        type: string
      TotalTransactions:
        type: integer
        format: int64
      TotalPages:
        type: integer
        format: int32
      Transactions:
        type: array
        items:
            $ref: '#/definitions/BalanceHistoryTransaction'
      CurrentAccountBalance:
        type: number
        format: decimal
  BalanceHistoryRequest:
    type: object
    properties:
      TransactionsPerPage:
        type: integer
        format: int32
      StartDate:
        type: string
        format: date-time
      EndDate:
        type: string
        format: date-time
      TransactionTypesToInclude:
        type: array
        items:
            $ref: '#/definitions/BrandedTransactionType'
  BalanceHistoryByTokenRequest:
    type: object
    properties:
      BalanceHistoryToken:
        type: string
      PageNumber:
        type: integer
        format: int32
  BalanceHistoryTransaction:
    type: object
    properties:
      Date:
        type: string
        format: date-time
      OldBalance:
        type: number
        format: decimal
      Amount:
        type: number
        format: decimal
      NewBalance:
        type: number
        format: decimal
      TransactionType:
        type: string
  BrandedTransactionType:
    type: string
    enum: ['All', 'Purchase', 'Credit', 'Print', 'Adjustment', 'Refund', 'Debit']
  AdjustmentHistoryResult:
    type: object
    properties:
      Transactions:
        type: array
        items:
            $ref: '#/definitions/Adjustment'
      LinkHeaders:
        $ref: '#/definitions/LinkHeaderResponse'
  Adjustment:
    type: object
    properties:
      AdjustmentDate:
        type: string
        format: date-time
      AdjustmentStatus:
        type: string
      TrackingNumber:
        type: string
      AdjustmentId:
        type: string
      AdjustmentReason:
        type: string
      ActualAmount:
        type: number
        format: decimal
      AdjAmount:
        type: number
        format: decimal
      OriginalAmount:
        type: number
        format: decimal
      Carrier:
        type: string
      OriginalService:
        type: string
      OriginalPackaging:
        type: string
      OriginalWeight:
        type: number
        format: decimal
      OriginalLength:
        type: number
        format: decimal
      OriginalWidth:
        type: number
        format: decimal
      OriginalHeight:
        type: number
        format: decimal
      OriginalFromZip:
        type: string
      OriginalToZip:
        type: string
      OriginalToCountry:
        type: string
      PrintDate:
        type: string
        format: date-time
      ActualService:
        type: string
      ActualPackaging:
        type: string
      ActualWeight:
        type: number
        format: decimal
      ActualLength:
        type: number
        format: decimal
      ActualWidth:
        type: number
        format: decimal
      ActualHeight:
        type: number
        format: decimal
      ActualFromZip:
        type: string
      ActualToZip:
        type: string
      ActualToCountry:
        type: string
  IncludedInsuranceResult:
    type: object
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/IncludedInsuranceItem'
  IncludedInsuranceItem:
    type: object
    properties:
      ServiceId:
        type: integer
        format: int32
      ServiceName:
        type: string
      Description:
        type: string
      AvailableAmounts:
        type: array
        items:
            type: number
            format: decimal
      DefaultAmount:
        type: number
        format: decimal
  GpFacilitiesResult:
    type: object
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/CustomerConsolidatorFacilityAddressOverrideDetailV1'
  CustomerConsolidatorFacilityAddressOverrideDetailV1:
    type: object
    properties:
      ConsolidatorFacilityAddressID:
        type: integer
        format: int32
      FacilityCity:
        type: string
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      State:
        type: string
      ToZip:
        type: string
      CarrierID:
        type: integer
        format: int32
      ConsolidatorAccountNumber:
        type: string
      MailerID:
        type: string
      PresortFacilityCity:
        type: string
      SecondaryManifestAccountNumber:
        type: string
  AddKiosksRequest:
    type: object
    properties:
      KiosksList:
        type: array
        items:
          $ref: '#/definitions/StationAddressInfo'
      MeterMaxLimit:
        type: number
        format: decimal
  AddKiosksResponse:
    type: object
    properties:
      SuccessCases:
        type: array
        items:
          $ref: '#/definitions/StationAddSuccess'
      ErrorCases:
        type: array
        items:
          $ref: '#/definitions/StationAddError'
      IsErrorReturned:
        type: boolean
      ErrorDescription:
        type: string
  StationAddSuccess:
    type: object
    properties:
      Name:
        type: string
      MeterNumber:
        type: integer
        format: uint32
  StationAddError:
    type: object
    properties:
      Name:
        type: string
      ErrorDescription:
        type: string
  GetKioskResponse:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Name:
        type: string
      Status:
        type: integer
        format: byte
        enum: ['Inactive', 'Active']
      IsErrorReturned:
        type: boolean
      ErrorDescription:
        type: string
  GetKioskDetailsResponse:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Name:
        type: string
      Status:
        type: integer
        format: byte
        enum: ['Inactive', 'Active']
      Addresses:
        $ref: '#/definitions/StationAddressInfo'
      AvailablePostage:
        type: number
        format: decimal
      ControlTotal:
        type: number
        format: decimal
      MeterMaxLimit:
        type: number
        format: decimal
      IsErrorReturned:
        type: boolean
      ErrorDescription:
        type: string
  SetKioskStatusRequest:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Status:
        type: integer
        format: byte
        enum: ['Inactive', 'Active']
  SetKioskDetailsRequest:
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Name:
        type: string
      AddressInfo:
        $ref: '#/definitions/StationAddressInfo'
  StationAddressInfo:
    type: object
    properties:
      ContactFirstName:
        type: string
      ContactLastName:
        type: string
      ContactAddress1:
        type: string
      ContactCity:
        type: string
      ContactState:
        type: string
      ContactZipCode:
        type: string
      ContactZipAddOn:
        type: string
      ContactPhone:
        type: string
      ContactEmail:
        type: string
      SiteName:
        type: string
      SiteAddress:
        type: string
      SiteCity:
        type: string
      SiteState:
        type: string
      SiteZipCode:
        type: string
      SiteZipAddOn:
        type: string
  MeterResetResult:
    type: string
    enum: ['Success', 'InvalidMeterNumber', 'MeterBalanceExceeded', 'InvalidInput', 'GeneralError']
  CorporationInfo:
    type: object
    properties:
      CorporationName:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      CompanyName:
        type: string
      EmailAddress:
        type: string
      PhoneNumber:
        type: string
      SecurityPolicyId:
        type: integer
        format: int32
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
      Country:
        type: string
      CsrUsername:
        type: string
      IpAddress:
        type: string
      AdminCustId:
        type: integer
        format: int32
      AdminMeterName:
        type: string
      CustIds:
        type: array
        items:
          type: integer
        format: int32
      MeterNames:
        type: array
        items:
          type: string
  AddCorporationCustomerIdRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      AdditionalCustIds:
        type: array
        items:
          type: integer
        format: int32
      AdditionalMeterNames:
        type: array
        items:
          type: string
      CsrUsername:
        type: string
      IpAddress:
        type: string
  BulkAccountCreditRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      AmountInPennies:
        type: integer
        format: int64
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 36
        description: 'None-0,AccountRefundCredit-1,KeyCustomer-2,CustomerPaymentNotCreditedPreviously-3,DemoAccount-4,DisputedAmountPaid-5,MarketingPromotion-6,PreventAccountClosure-7,ServicePlanFreePostageNotAddedInitially-8,UnhappyWithExperience-9,ValuedCustomer-10,MisprintedPostageCredit-11,MisprintedPostageProof-12,MisprintedPostageCSNoProof-13,FreePostageCoupon-14,ERefundCredit-15,AdminCredit-16,PostageCompensation-17,FailedDupPromoCheck-18,ReferAFriendProgram-19,PostageCredit-20,RetentionTechnique-21,EaganOverride-22,ExpressMailVolumeRebate-23,PromoCouponRET-24,PromoCouponMANUAL-25,FiveDollarRetentionTechnique-26,MisprintedPostageCCNoProofOrClaimDenied-27,MisprintedPostageCCTech-28,FiveDollarInitialSignUpGrant-29,UnusedPostageApprovalAppeal-30,Check-31,Overdraft-32,CreditPendingPostagePurchase-33,ParcelGuardClaim-35,EnterprisePaymentAccountCredit-36'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - UserName
      - AmountInPennies
      - Reason
      - Comments
      - CustRepName
  BulkAdjustServiceFeeRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      AmountInPennies:
        type: integer
        format: int64
      IsCredit:
        type: boolean
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 27
        description: 'None-0,FinalBillProrating-1,PlanChange-2,RetentionEffortCusPastDue-3,PaymentArrangementCustPastDue-4,KeyCustomer-5,DemoAccount-6,Employee-7,FailedTransactionFees-8,MarketingPromotion-9,NotChargedForPreviousFees-10,OtherAdjustment-11,OverChargedForPreviousFees-12,PreventAccountClosure-13,UnhappyWithExperience-14,ValuedCustomer-15,AccountActivationFee-16,AccountClosureProcessingFee-17,LateFee-18,ChangeOfServiceFee-19,Chargeback-20,ChargebackProcessingFee-21,ReturnedACHTransaction-22,ReturnedPaymentFee-23,CancellationFee-24,EquipmentReplacementCharge-25,ValuedBilling-26,PaymentReceived-27'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - AmountInPennies
      - IsCredit
      - Reason
      - Comments
      - CustRepName
  BulkChangePlanRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      PlanId:
        type: integer
        format: int32
    required:
      - CustId
      - UserName
      - PlanId
  BulkWaiveServiceFeeRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      RequestFreeMonths:
        type: integer
        format: byte
      Reason:
        type: integer
        format: int32
        minimum: 0
        maximum: 17
        description: 'None-0, KeyCustomer-1, DemoAccount-2, Employee-3, FailedTransactionFees-4, ImproperlyChargedForPreviousFees-5, MarketingPromotion-6, Other-7, PreventAccountClosure-8, UnhappyWithExperience-9, ValuedCustomer-10, PaymentReceived-11, RetentionOutOfTrial-12,, RetentionExtendTrial-13,, FinalBillFraud-14,, FinalBillDupAccnt-15, FinalBillCROnly-16, UnhappyWithExperienceCROnly-17'
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - RequestFreeMonths
      - Reason
      - Comments
      - CustRepName
  BulkAccountHoldRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      Comments:
        type: string
      CsrName:
        type: string
      Status:
        $ref: '#/definitions/AccountOnHoldStatus'
    required:
      - CustId
      - Status
      - Comments
      - CsrName
  LabelFeeBillingDetailsResponse:
    type: object
    properties:
      LabelFeeRateID:
        type: integer
        format: int32
      DateCreated:
        type: string
        format: DateTime
      DateUpdated:
        type: string
        format: DateTime
      DateDisabled:
        type: string
        format: DateTime
      LabelFeeEnabled:
        type: boolean
      BillingDueAfterDisable:
        type: boolean
  LabelFeeRateSetsResponse:
    type: object
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/LabelFeeRateSetItem'
  LabelFeeRateSetDetailsResponse:
    type: object
    properties:
      Result:
        $ref: '#/definitions/LabelFeeRateSetItem'
  LabelFeeRateSetItem:
    type: object
    properties:
      LabelFeeRateID:
        type: integer
        format: int32
      UsesDynamicTiers:
        type: boolean
      LabelRatePostageTypeID:
        type: integer
        format: byte
      MinFeeAmount:
        type: number
        format: decimal
      Ranges:
        type: array
        items:
          $ref: '#/definitions/LabelFeeRateSetRange'
  LabelFeeRateSetRange:
    type: object
    properties:
      RangeStart:
        type: integer
        format: int32
      RangeEnd:
        type: integer
        format: int32
      RangeAmount:
        type: number
        format: decimal
  BulkAccountDebitRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      Amount:
        type: number
        format: decimal
      Comments:
        type: string
      CustRepName:
        type: string
    required:
      - CustId
      - Amount
      - Comments
      - CustRepName
  BulkCloseAccountRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserName:
        type: string
      Address:
        $ref: '#/definitions/Address'
      CsrName:
        type: string
      ReasonId:
        type: integer
        format: int32
    required:
      - CustId
      - CsrName
  DutiesAndTaxesPaymentTypes:
    type: object
    properties:
      DutiesAndTaxesPaymentTypesCatalog:
        type: array
        items:
          $ref: '#/definitions/IdDescription'
  DutiesAndTaxesAdjustmentSettings:
    type: object
    properties:
      PaymentType:
        type: integer
        format: byte
      ProcessingFee:
        type: number
        format: decimal
  SearchInvoicingResult:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      PaymentId:
        type: integer
        format: int32
  PaymentAccountResponse:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      PaymentAccounts:
        type: array
        items:
          $ref: '#/definitions/PaymentAccount'
      PaymentAccountForChargeCategory:
        $ref: '#/definitions/PaymentAccountForChargeCategory'
      ChargeCategoryUsingCorporationPaymentAccount:
        $ref: '#/definitions/ChargeCategoryUsingCorporationPaymentAccount'
      ChargeCategoryUsingInvoicing:
        $ref: '#/definitions/ChargeCategoryUsingInvoicing'
      ChargeCategoryUsingOMAS:
        $ref: '#/definitions/ChargeCategoryUsingOMAS'
      ChargeCategoryUsingEPS:
        $ref: '#/definitions/ChargeCategoryUsingEPS'
  PaymentAccountForChargeCategory:
    type: object
    properties:
       Postage:
          type: number
          format: long
       ServiceFee:
          type: number
          format: long
       Store:
          type: number
          format: long
  ChargeCategoryUsingCorporationPaymentAccount:
    type: object
    properties:
      Postage:
        type: boolean
      Service:
        type: boolean
      Store:
        type: boolean
      OverridePaymentAccounts:
        type: array
        items:
          $ref: '#/definitions/PaymentAccount'
  ChargeCategoryUsingInvoicing:
    type: object
    properties:
      IsPostageInvoiced:
        type: boolean
      IsStoreInvoiced:
        type: boolean
      IsServiceFeeInvoiced:
        type: boolean
  ChargeCategoryUsingOMAS:
    type: object
    properties:
      IsPostageEnabled:
        type: boolean
      OmasAccountId:
        type: string
  ChargeCategoryUsingEPS:
    type: object
    properties:
      EPSAccountNumber:
        type: string
  PaymentAccountRequest:
    type: object
    properties:
      CustId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      PaymentAccount:
        $ref: '#/definitions/PaymentAccount'
  PaymentAccount:
    type: object
    properties:
       PaymentAccountId:
          type: number
          format: long
       PaymentAccountType:
          type: string
          enum: ['None','CreditCard','Ach']
       NickName:
          type: string
       AccountHolderName:
          type: string
       AccountNumber:
          type: string
       AccountType:
          type: string
       ExpiryDate:
          type: string
       BillingAddress:
          $ref: '#/definitions/BillingAddress'
       CVN:
          type: string
       BankName:
          type: string
       RoutingNumber:
          type: string
       AccountNumberDisplayDigits:
          type: string
  BillingAddress:
    type: object
    properties:
       Address1:
          type: string
       Address2:
          type: string
       City:
          type: string
       State:
          type: string
       Zip:
          type: string
       Country:
          type: string
  CustomerInvoiceSetting:
    type: object
    properties:
      CustomerId:
        type: integer
        format: int32
      UserId:
        type: integer
        format: int32
      IsPostageInvoiced:
        type: boolean
      IsStoreInvoiced:
        type: boolean
      IsServiceFeeInvoiced:
        type: boolean
      MonthlyInvoiceAmountLimit:
        type: number
        format: decimal
      FirstName:
        type: string
      LastName:
        type: string
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
  CorporationRequest:
    type: object
    required:
      - RootCustId
      - SecurityPolicyid
    properties:
      CorporationName:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      CompanyName:
        type: string
      PhoneNumber:
        type: string
      Email:
        type: string
      Address1:
        type: string
      Address2:
        type: string
      City:
        type: string
      State:
        type: string
      Zip:
        type: string
      WindowsLoginName:
        type: string
      UserIPAddress:
        type: string
      RootCustId:
        type: integer
        format: int32
      RootMeterName:
        type: string
      CorporationMeters:
        type: array
        items:
          $ref: '#/definitions/CorporationMeter'
      SecurityPolicyid:
        type: integer
        format: int32
      LoginBannerText:
        type: string
  CorporationMeter:
    type: object
    required:
      - CustId
    properties:
      CustId:
        type: integer
        format: int32
      MeterName:
        type: string
  AddMetersToCorporationRequest:
    type: object
    required:
      - CustIdExistingInCorporation
    properties:
      CustIdExistingInCorporation:
        type: integer
        format: int32
      CorporationMeters:
        type: array
        items:
          $ref: '#/definitions/CorporationMeter'
      WindowsLoginName:
        type: string
      UserIPAddress:
        type: string
  SecurityPolicy:
    type: object
    properties:
      SecurityPolicyNameField:
        type: string
      SecurityPolicyIdField:
        type: integer
        format: int32
  DynamicPaymentFields:
    type: object
    properties:
      CustID:
        type: integer
        format: int32
      PaymentField1:
        type: string
      PaymentField2:
        type: string
      PaymentField3:
        type: string
      PaymentField4:
        type: string
      PaymentField5:
        type: string
      PaymentField6:
        type: string
      PaymentField7:
        type: string
      PaymentField8:
        type: string
      PaymentField9:
        type: string
      PaymentField10:
        type: string
      PaymentField11:
        type: string
      PaymentField12:
        type: string
      PaymentField13:
        type: string
      PaymentField14:
        type: string
      PaymentField15:
        type: string
      PaymentField16:
        type: string
      PaymentField17:
        type: string
      PaymentField18:
        type: string
      PaymentField19:
        type: string
      PaymentField20:
        type: string
      PaymentField21:
        type: string
      PaymentField22:
        type: string
      PaymentField23:
        type: string
      PaymentField24:
        type: string
      PaymentField25:
        type: string
      SendToEbitGuard:
        type: string
  ThrottleRateResult:
    type: object
    required:
      - IsDefaultRate
      - BucketLimit
      - RefillSize
      - RefillIntervalMS
    properties:
      IsDefaultRate:
        type: boolean
      BucketLimit:
        type: integer
        format: int32
      RefillSize:
        type: integer
        format: int32
      RefillIntervalMS:
        type: integer
        format: int32
  ThrottleID:
    type: string
    description: ''
    x-enumNames:
      - None
      - AuthenticateUser
      - CreateIndicium
      - CreateManifest
      - PurchasePostage
      - CancelIndicium
      - GetRates
      - GetAccountInfo
      - ChangePlan
      - ChangePayment
    enum:
      - None
      - AuthenticateUser
      - CreateIndicium
      - CreateManifest
      - PurchasePostage
      - CancelIndicium
      - GetRates
      - GetAccountInfo
      - ChangePlan
      - ChangePayment
  ResellerPartner:
    type: object
    properties:
      reseller_partner_id:
        type: integer
      description:
        type: string
      contact_name:
        type: string
      address_1:
        type: string
      address_2:
        type: string
      city:
        type: string
      state:
        type: string
      postal_code:
        type: string
      email_address:
        type: string
      phone:
        type: string
  PlatformDefaults:
    type: object
    properties:
      reseller_partners:
        type: array
        items:
          $ref: '#/definitions/ResellerPartner'
      reseller_default_info:
        $ref: '#/definitions/ResellerDefaultInfo'
      default_funding_info:
        type: array
        items:
          $ref: '#/definitions/DefaultFundingInfo'
      reseller_partner_pricing_tiers:
        type: array
        items:
          $ref: '#/definitions/ResellerPartnerPricingTier'
  ResellerDefaultInfo:
    type: object
    required:
    - lowest_available_reseller_id
    - last_available_reseller_id
    properties:
      lowest_available_reseller_id:
        type: integer
        format: int32
      last_available_reseller_id:
        type: integer
        format: int32
  DefaultFundingInfo:
    type: object
    required:
    - platform_meter_pool_type
    - customer_funding_threshold
    - stamps_funding_threshold
    - stamps_funding_amount
    - minimum_transaction_value
    properties:
      platform_meter_pool_type:
        $ref: '#/definitions/PlatformMeterPoolType'
      customer_funding_threshold:
        type: number
        format: decimal
      stamps_funding_threshold:
        type: number
        format: decimal
      stamps_funding_amount:
        type: number
        format: decimal
      minimum_transaction_value:
        type: number
        format: decimal
  PlatformMeterPoolType:
    type: string
    description: ''
    x-enumNames:
    - CBPLetters
    - CBPPackages
    - NSA
    - Metro
    enum:
    - CBPLetters
    - CBPPackages
    - NSA
    - Metro
  ResellerPartnerPricingTier:
    type: object
    required:
    - id
    properties:
      id:
        type: integer
      description:
        type: string
  SASPlatformResponse:
    type: object
    required:
    - corp_id
    - reseller_id
    - reseller_partner_id
    properties:
      corp_id:
        type: integer
        format: int32
      reseller_id:
        type: integer
        format: int32
      reseller_partner_id:
        type: integer
        format: int32
      reseller_meter_pools:
        type: array
        items:
          $ref: '#/definitions/ResellerMeterPool'
      default_funding_info:
        type: array
        items:
          $ref: '#/definitions/DefaultFundingInfo'
  ResellerMeterPool:
    type: object
    required:
    - reseller_meter_pool_id
    - rate_set_id
    - reseller_meter_type_id
    - customer_funding_threshold
    - stamps_funding_threshold
    - stamps_funding_amount
    - minimum_transaction_value
    properties:
      reseller_meter_pool_id:
        type: integer
        format: int32
      rate_set_id:
        type: integer
        format: int32
      reseller_meter_type_id:
        type: integer
        format: int32
      customer_funding_threshold:
        type: number
        format: decimal
      stamps_funding_threshold:
        type: number
        format: decimal
      stamps_funding_amount:
        type: number
        format: decimal
      minimum_transaction_value:
        type: number
        format: decimal
      reseller_meter_pool_description:
        type: string
  SASPlatformRequest:
    type: object
    required:
    - reseller_partner_id
    - reseller_id
    - reseller_partner_pricing_tier_id
    - nsa_pool_rate_set_id
    properties:
      reseller_partner_id:
        type: integer
        format: int32
      reseller_id:
        type: integer
        format: int32
      reseller_partner_pricing_tier_id:
        type: integer
        format: int32
      nsa_pool_rate_set_id:
        type: integer
        format: int32
      metro_pool_rate_set_id:
        type: integer
        format: int32
      epostage_mailer_id:
        type: string
      epostage_permit_number:
        type: integer
        format: int32
      pour_mailer_id:
        type: string
      aux_notes:
        type: string
      default_funding_info:
        type: array
        items:
          $ref: '#/definitions/DefaultFundingInfo'
      platform_meter_pool_mids:
        type: array
        items:
          $ref: '#/definitions/PlatformMeterPoolMID'
  PlatformMeterPoolMID:
    type: object
    required:
    - platform_meter_pool_type
    properties:
      platform_meter_pool_type:
        $ref: '#/definitions/PlatformMeterPoolType'
      mid:
        type: string
  PlatformAndMeterInfoRequest:
    type: object
    required:
    - reseller_id
    properties:
      reseller_id:
        type: integer
        format: int32
      username_prefix:
        type: string
      meter_and_rate_set_info:
        type: array
        items:
          $ref: '#/definitions/MeterAndRateSetInfo'
  MeterAndRateSetInfo:
    type: object
    required:
    - platform_meter_pool_type
    - postal_a_meter_count
    - postal_b_meter_count
    - payment_account_id
    properties:
      platform_meter_pool_type:
        $ref: '#/definitions/PlatformMeterPoolType'
      postal_a_meter_count:
        type: integer
        format: int32
      postal_b_meter_count:
        type: integer
        format: int32
      mid:
        type: string
      payment_account_id:
        type: integer
        format: int64
  PlatformMeterResponse:
    type: object
    required:
    - user_id
    - cust_id
    - reseller_meter_pool_id
    - meter_no
    - rate_set_id
    - post_registration_step
    - is_failed
    properties:
      user_name:
        type: string
      user_id:
        type: integer
        format: int32
      cust_id:
        type: integer
        format: int32
      reseller_meter_pool_id:
        type: integer
        format: int32
      meter_no:
        type: number
        format: decimal
      rate_set_id:
        type: integer
        format: int32
      mid:
        type: string
      post_registration_step:
        $ref: '#/definitions/PostRegistrationStep'
      is_failed:
        type: boolean
      failed_reason:
        type: string
  PostRegistrationStep:
    type: string
    description: ''
    x-enumNames:
    - RegistrationStart
    - RegistrationSuccess
    - SetBalanceLimitStart
    - SetBalanceLimitSuccess
    - SetAppCapStart
    - SetAppCapSuccess
    - UpdatePaymentAccountStart
    - UpdatePaymentAccountSuccess
    - SetMailerIdStart
    - SetMailerIdSuccess
    - PurchasePostageStart
    - PurchasePostageSuccess
    - ClearPasswordHashStart
    - ClearPasswordHashSuccess
    - SetMeterRateSetStart
    - SetMeterRateSetSuccess
    - AddToResellerMeterPoolStart
    - AddToResellerMeterPoolSuccess
    enum:
    - RegistrationStart
    - RegistrationSuccess
    - SetBalanceLimitStart
    - SetBalanceLimitSuccess
    - SetAppCapStart
    - SetAppCapSuccess
    - UpdatePaymentAccountStart
    - UpdatePaymentAccountSuccess
    - SetMailerIdStart
    - SetMailerIdSuccess
    - PurchasePostageStart
    - PurchasePostageSuccess
    - ClearPasswordHashStart
    - ClearPasswordHashSuccess
    - SetMeterRateSetStart
    - SetMeterRateSetSuccess
    - AddToResellerMeterPoolStart
    - AddToResellerMeterPoolSuccess
  Reseller:
    type: object
    required:
    - reseller_id
    - auto_refund_enabled
    properties:
      reseller_id:
        type: integer
        format: int32
      corp_id:
        type: integer
        format: int32
      auto_refund_enabled:
        type: boolean
      is_sas_cbp:
        type: boolean
      epostage_mailer_id:
        type: string
      epostage_permit_number:
        type: integer
        format: int32
      pour_mailer_id:
        type: string
  ResellerPartnerInfo:
    type: object
    required:
    - reseller_id
    - reseller_partner_id
    - reseller_partner_pricing_tier_id
    properties:
      reseller_id:
        type: integer
        format: int32
      reseller_partner_id:
        type: integer
      aux_notes:
        type: string
      reseller_partner_pricing_tier_id:
        type: integer
  SasPlatformMailerId:
    type: object
    required: ["MailerIdType", "MailerId"]
    properties:
      IntegrationId:
        type: string
        minLength: 36
        maxLength: 36
      MailerIdType:
        type: string
        enum: ['PayOnUseReturn', 'PcPostage', 'EPostage']
      MailerId:
        type: string
        description: 6 digit or 9 digit MailerIds
        minLength: 6
        maxLength: 9
      PermitNumber:
        type: integer
        format: int32
  BulkAddCarrierAccountRequest:
    type: object
    required:
    - CustId
    - CarrierId
    properties:
      CustId:
        type: integer
        format: int32
      CarrierId:
        type: integer
        format: int32
      ShipEngineCarrierAccountInfo:
        type: array
        items:
          $ref: '#/definitions/ShipEngineCarrierAccountInfo'
  ShipEngineCarrierAccountInfo:
    type: object
    properties:
      UserOwnedAccount:
        type: boolean
      DhlECommerceCarrier:
        $ref: '#/definitions/DhlECommerceCarrier'
  DhlECommerceCarrier:
    type: object
    required:
    - ClientId
    - Username
    - Password
    - PickupNumber
    - DistributionCenter
    properties:
      ClientId:
        type: string
      Username:
        type: string
      Password:
        type: string
      PickupNumber:
        type: string
      DistributionCenter:
        type: string
  BulkUpdateAutoBuyRequest:
    type: object
    required: ["CustId", "PurchaseAmount", "ThresholdAmount"]
    properties:
      CustId:
        type: integer
        format: int32
      PurchaseAmount:
        type: number
        format: decimal
      ThresholdAmount:
        type: number
        format: decimal
      SetAutoBuy:
        type: boolean</con:content>
      <con:type>https://swagger.io/swagger2/specification</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://localhost</con:endpoint>
    <con:endpoint>https://localhost</con:endpoint>
  </con:endpoints>
</con:interface>
